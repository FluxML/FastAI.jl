{"attributes":{"kind":"function","backlinks":[{"tag":"sourcefile","title":"MLUtils/MLUtils.jl","docid":"MLUtils@0.4.3/src/MLUtils.jl"},{"tag":"document","title":"Keypoint regression","docid":"FastAI@pr-283/doc/docs/notebooks/keypointregression.ipynb"},{"tag":"sourcefile","title":"FastAI/datasets/load.jl","docid":"FastAI@pr-283/src/datasets/load.jl"},{"tag":"sourcefile","title":"Flux/functor.jl","docid":"Flux@0.13.17/src/functor.jl"},{"tag":"document","title":"Presizing vision datasets for performance","docid":"FastAI@pr-283/doc/docs/notebooks/presizing.ipynb"},{"tag":"document","title":"Tabular Classification","docid":"FastAI@pr-283/doc/docs/notebooks/tabularclassification.ipynb"},{"tag":"sourcefile","title":"FastVision/encodings/imagepreprocessing.jl","docid":"FastVision@0.1.1/src/encodings/imagepreprocessing.jl"},{"tag":"sourcefile","title":"FastAI/datasets/Datasets.jl","docid":"FastAI@pr-283/src/datasets/Datasets.jl"},{"tag":"sourcefile","title":"FastVision/FastVision.jl","docid":"FastVision@0.1.1/src/FastVision.jl"},{"tag":"document","title":"Siamese image similarity","docid":"FastAI@pr-283/doc/docs/notebooks/siamese.ipynb"},{"tag":"sourcefile","title":"FastAI/FastAI.jl","docid":"FastAI@pr-283/src/FastAI.jl"},{"tag":"sourcefile","title":"FastVision/recipes.jl","docid":"FastVision@0.1.1/src/recipes.jl"},{"tag":"sourcefile","title":"MLUtils/obstransform.jl","docid":"MLUtils@0.4.3/src/obstransform.jl"},{"tag":"document","title":"fastai API comparison","docid":"FastAI@pr-283/doc/docs/fastai_api_comparison.md"},{"tag":"document","title":"Data containers","docid":"FastAI@pr-283/doc/docs/data_containers.md"}],"methods":[{"symbol_id":"MLUtils.mapobs","module_id":"MLUtils","file":"obstransform.jl","line":71,"signature":"(::Signature)"},{"symbol_id":"MLUtils.mapobs","module_id":"MLUtils","file":"obstransform.jl","line":107,"signature":"(::Signature)"},{"symbol_id":"MLUtils.mapobs","module_id":"MLUtils","file":"obstransform.jl","line":63,"signature":"(::Signature)"}],"package_id":"MLUtils@0.4.3","title":"mapobs","symbol_id":"MLUtils.mapobs","exported":true,"module_id":"MLUtils"},"tag":"documentation","children":[{"attributes":{"symbol":"MLUtils.mapobs","line":30,"module":"MLUtils","file":"obstransform.jl"},"tag":"docstring","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["mapobs(f, data; batched=:auto)\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Lazily map ",{"attributes":{},"tag":"code","children":["f"],"type":"node"}," over the observations in a data container ",{"attributes":{},"tag":"code","children":["data"],"type":"node"},". Returns a new data container ",{"attributes":{},"tag":"code","children":["mdata"],"type":"node"}," that can be indexed and has a length. Indexing triggers the transformation ",{"attributes":{},"tag":"code","children":["f"],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"p","children":["The batched keyword argument controls the behavior of ",{"attributes":{},"tag":"code","children":["mdata[idx]"],"type":"node"}," and ",{"attributes":{},"tag":"code","children":["mdata[idxs]"],"type":"node"}," where ",{"attributes":{},"tag":"code","children":["idx"],"type":"node"}," is an integer and ",{"attributes":{},"tag":"code","children":["idxs"],"type":"node"}," is a vector of integers:"],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["batched=:auto"],"type":"node"}," (default). Let ",{"attributes":{},"tag":"code","children":["f"],"type":"node"}," handle the two cases. Calls ",{"attributes":{},"tag":"code","children":["f(getobs(data, idx))"],"type":"node"}," and ",{"attributes":{},"tag":"code","children":["f(getobs(data, idxs))"],"type":"node"},"."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["batched=:never"],"type":"node"},". The function ",{"attributes":{},"tag":"code","children":["f"],"type":"node"}," is always called on a single observation. Calls ",{"attributes":{},"tag":"code","children":["f(getobs(data, idx))"],"type":"node"}," and ",{"attributes":{},"tag":"code","children":["[f(getobs(data, idx)) for idx in idxs]"],"type":"node"},"."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["batched=:always"],"type":"node"},". The function ",{"attributes":{},"tag":"code","children":["f"],"type":"node"}," is always called on a batch of observations. Calls ",{"attributes":{},"tag":"code","children":["getobs(f(getobs(data, [idx])), 1)"],"type":"node"}," and ",{"attributes":{},"tag":"code","children":["f(getobs(data, idxs))"],"type":"node"},"."],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"h1","children":["Examples"],"type":"node"},{"attributes":{"lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":["julia> data = (a=[1,2,3], b=[1,2,3]);\n\njulia> mdata = mapobs(data) do x\n         (c = x.a .+ x.b,  d = x.a .- x.b)\n       end\nmapobs(#25, (a = [1, 2, 3], b = [1, 2, 3]); batched=:auto))\n\njulia> mdata[1]\n(c = 2, d = 0)\n\njulia> mdata[1:2]\n(c = [2, 4], d = [0, 0])"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{"symbol":"MLUtils.mapobs","line":65,"module":"MLUtils","file":"obstransform.jl"},"tag":"docstring","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["mapobs(fs, data)\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Lazily map each function in tuple ",{"attributes":{},"tag":"code","children":["fs"],"type":"node"}," over the observations in data container ",{"attributes":{},"tag":"code","children":["data"],"type":"node"},". Returns a tuple of transformed data containers."],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{"symbol":"MLUtils.mapobs","line":93,"module":"MLUtils","file":"obstransform.jl"},"tag":"docstring","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["mapobs(namedfs::NamedTuple, data)\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Map a ",{"attributes":{},"tag":"code","children":["NamedTuple"],"type":"node"}," of functions over ",{"attributes":{},"tag":"code","children":["data"],"type":"node"},", turning it into a data container of ",{"attributes":{},"tag":"code","children":["NamedTuple"],"type":"node"},"s. Field syntax can be used to select a column of the resulting data container."],"type":"node"},{"attributes":{"lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"=","children":[{"attributes":{},"tag":"Identifier","children":["data"],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"=","children":["="],"type":"node"},{"attributes":{},"tag":"call","children":[{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"Integer","children":["1"],"type":"node"},{"attributes":{},"tag":":","children":[":"],"type":"node"},{"attributes":{},"tag":"Integer","children":["10"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"NewlineWs","children":["\n"],"type":"node"},{"attributes":{},"tag":"=","children":[{"attributes":{},"tag":"Identifier","children":["nameddata"],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"=","children":["="],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"call","children":[{"attributes":{"reftype":"symbol","document_id":"MLUtils@0.4.3/ref/MLUtils.mapobs"},"tag":"reference","children":["mapobs"],"type":"node"},{"attributes":{},"tag":"(","children":["("],"type":"node"},{"attributes":{},"tag":"tuple","children":[{"attributes":{},"tag":"(","children":["("],"type":"node"},{"attributes":{},"tag":"=","children":[{"attributes":{},"tag":"Identifier","children":["x"],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"=","children":["="],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"Identifier","children":["sqrt"],"type":"node"}],"type":"node"},{"attributes":{},"tag":",","children":[","],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"=","children":[{"attributes":{},"tag":"Identifier","children":["y"],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"=","children":["="],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"Identifier","children":["log"],"type":"node"}],"type":"node"},{"attributes":{},"tag":")","children":[")"],"type":"node"}],"type":"node"},{"attributes":{},"tag":",","children":[","],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"Identifier","children":["data"],"type":"node"},{"attributes":{},"tag":")","children":[")"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"NewlineWs","children":["\n"],"type":"node"},{"attributes":{},"tag":"call","children":[{"attributes":{},"tag":"call","children":[{"attributes":{"reftype":"symbol","document_id":"MLUtils@0.4.3/ref/MLUtils.getobs"},"tag":"reference","children":["getobs"],"type":"node"},{"attributes":{},"tag":"(","children":["("],"type":"node"},{"attributes":{},"tag":"Identifier","children":["nameddata"],"type":"node"},{"attributes":{},"tag":",","children":[","],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"Integer","children":["10"],"type":"node"},{"attributes":{},"tag":")","children":[")"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"==","children":["=="],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"tuple","children":[{"attributes":{},"tag":"(","children":["("],"type":"node"},{"attributes":{},"tag":"=","children":[{"attributes":{},"tag":"Identifier","children":["x"],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"=","children":["="],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"call","children":[{"attributes":{},"tag":"Identifier","children":["sqrt"],"type":"node"},{"attributes":{},"tag":"(","children":["("],"type":"node"},{"attributes":{},"tag":"Integer","children":["10"],"type":"node"},{"attributes":{},"tag":")","children":[")"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":",","children":[","],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"=","children":[{"attributes":{},"tag":"Identifier","children":["y"],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"=","children":["="],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"call","children":[{"attributes":{},"tag":"Identifier","children":["log"],"type":"node"},{"attributes":{},"tag":"(","children":["("],"type":"node"},{"attributes":{},"tag":"Integer","children":["10"],"type":"node"},{"attributes":{},"tag":")","children":[")"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":")","children":[")"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"NewlineWs","children":["\n"],"type":"node"},{"attributes":{},"tag":"call","children":[{"attributes":{},"tag":"call","children":[{"attributes":{"reftype":"symbol","document_id":"MLUtils@0.4.3/ref/MLUtils.getobs"},"tag":"reference","children":["getobs"],"type":"node"},{"attributes":{},"tag":"(","children":["("],"type":"node"},{"attributes":{},"tag":".","children":[{"attributes":{},"tag":"Identifier","children":["nameddata"],"type":"node"},{"attributes":{},"tag":".","children":["."],"type":"node"},{"attributes":{},"tag":"quote","children":[{"attributes":{},"tag":"Identifier","children":["x"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":",","children":[","],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"Integer","children":["10"],"type":"node"},{"attributes":{},"tag":")","children":[")"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"==","children":["=="],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"call","children":[{"attributes":{},"tag":"Identifier","children":["sqrt"],"type":"node"},{"attributes":{},"tag":"(","children":["("],"type":"node"},{"attributes":{},"tag":"Integer","children":["10"],"type":"node"},{"attributes":{},"tag":")","children":[")"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}