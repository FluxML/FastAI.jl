{"attributes":{"kind":"function","backlinks":[{"tag":"documentation","title":"f64","docid":"Flux@0.13.17/ref/Flux.f64"},{"tag":"documentation","title":"f32","docid":"Flux@0.13.17/ref/Flux.f32"},{"tag":"sourcefile","title":"Flux/Flux.jl","docid":"Flux@0.13.17/src/Flux.jl"},{"tag":"sourcefile","title":"Flux/functor.jl","docid":"Flux@0.13.17/src/functor.jl"},{"tag":"documentation","title":"gpu","docid":"Flux@0.13.17/ref/Flux.gpu"}],"methods":[{"symbol_id":"Flux.f16","module_id":"Flux","file":"functor.jl","line":372,"signature":"(::Signature)"}],"package_id":"Flux@0.13.17","title":"f16","symbol_id":"Flux.f16","exported":true,"module_id":"Flux"},"tag":"documentation","children":[{"attributes":{"symbol":"Flux.f16","line":346,"module":"Flux","file":"functor.jl"},"tag":"docstring","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["f16(m)\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Converts the ",{"attributes":{},"tag":"code","children":["eltype"],"type":"node"}," of model's ",{"attributes":{},"tag":"em","children":["floating point"],"type":"node"}," parameters to ",{"attributes":{},"tag":"code","children":["Float16"],"type":"node"},". Recurses into structs marked with ",{"attributes":{"href":"@ref","title":""},"tag":"a","children":[{"attributes":{},"tag":"code","children":["@functor"],"type":"node"}],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"p","children":["Support for ",{"attributes":{},"tag":"code","children":["Float16"],"type":"node"}," is limited on many CPUs. Julia may convert to ",{"attributes":{},"tag":"code","children":["Float32"],"type":"node"}," for each operation, which is slow."],"type":"node"},{"attributes":{},"tag":"p","children":["See also ",{"attributes":{"reftype":"symbol","href":"@ref","title":"","document_id":"Flux@0.13.17/ref/Flux.f32"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["f32"],"type":"node"}],"type":"node"}," and ",{"attributes":{"reftype":"symbol","href":"@ref","title":"","document_id":"Flux@0.13.17/ref/Flux.f64"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["f64"],"type":"node"}],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"h1","children":["Example"],"type":"node"},{"attributes":{"lang":"jldoctest"},"tag":"codeblock","children":["julia> m = Chain(Dense(784, 2048, relu), Dense(2048, 10))  # all Float32\nChain(\n  Dense(784 => 2048, relu),             # 1_607_680 parameters\n  Dense(2048 => 10),                    # 20_490 parameters\n)                   # Total: 4 arrays, 1_628_170 parameters, 6.211 MiB.\n\njulia> m |> f16  # takes half the memory\nChain(\n  Dense(784 => 2048, relu),             # 1_607_680 parameters\n  Dense(2048 => 10),                    # 20_490 parameters\n)                   # Total: 4 arrays, 1_628_170 parameters, 3.106 MiB.\n"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}