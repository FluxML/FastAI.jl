{"attributes":{"kind":"function","backlinks":[{"tag":"documentation","title":"rand_like","docid":"MLUtils@0.4.0/ref/MLUtils.rand_like"},{"tag":"sourcefile","title":"MLUtils/MLUtils.jl","docid":"MLUtils@0.4.0/src/MLUtils.jl"},{"tag":"sourcefile","title":"MLUtils/utils.jl","docid":"MLUtils@0.4.0/src/utils.jl"}],"methods":[{"symbol_id":"MLUtils.randn_like","module_id":"MLUtils","file":"utils.jl","line":687,"signature":"(::Signature)"},{"symbol_id":"MLUtils.randn_like","module_id":"MLUtils","file":"utils.jl","line":686,"signature":"(::Signature)"},{"symbol_id":"MLUtils.randn_like","module_id":"MLUtils","file":"utils.jl","line":689,"signature":"(::Signature)"},{"symbol_id":"MLUtils.randn_like","module_id":"MLUtils","file":"utils.jl","line":688,"signature":"(::Signature)"}],"package_id":"MLUtils@0.4.0","title":"randn_like","symbol_id":"MLUtils.randn_like","exported":true,"module_id":"MLUtils"},"tag":"documentation","children":[{"attributes":{"symbol":"MLUtils.randn_like","line":647,"module":"MLUtils","file":"utils.jl"},"tag":"docstring","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["randn_like([rng=default_rng()], x, [element_type=eltype(x)], [dims=size(x)])\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Create an array with the given element type and size, based upon the given source array ",{"attributes":{},"tag":"code","children":["x"],"type":"node"},". All element of the new array will be set to a random value drawn from a normal distribution. The last two arguments are both optional, defaulting to the given array's eltype and size. The dimensions may be specified as an integer or as a tuple argument."],"type":"node"},{"attributes":{},"tag":"p","children":["The default random number generator is used, unless a custom one is passed in explicitly as the first argument."],"type":"node"},{"attributes":{},"tag":"p","children":["See also ",{"attributes":{},"tag":"code","children":["Base.randn"],"type":"node"}," and ",{"attributes":{"reftype":"symbol","href":"@ref","title":"","document_id":"MLUtils@0.4.0/ref/MLUtils.rand_like"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["rand_like"],"type":"node"}],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"h1","children":["Examples"],"type":"node"},{"attributes":{"lang":"julia-repl"},"tag":"codeblock","children":["julia> x = ones(Float32, 2)\n2-element Vector{Float32}:\n 1.0\n 1.0\n\njulia> randn_like(x, (3, 3))\n3×3 Matrix{Float32}:\n -0.385331    0.956231   0.0745102\n  1.43756    -0.967328   2.06311\n  0.0482372   1.78728   -0.902547\n\njulia> using CUDA\n\njulia> CUDA.ones(2, 2)\n2×2 CuArray{Float32, 2, CUDA.Mem.DeviceBuffer}:\n 1.0  1.0\n 1.0  1.0\n\njulia> randn_like(x, Float64)\n2×2 CuArray{Float64, 2, CUDA.Mem.DeviceBuffer}:\n -0.578527   0.823445\n -1.01338   -0.612053\n"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}