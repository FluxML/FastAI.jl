{"attributes":{"kind":"function","backlinks":[{"tag":"document","title":"Feature registries in FastAI.jl","docid":"FastAI@dev/doc/docs/notebooks/registries.ipynb"},{"tag":"documentation","title":"DataLoader","docid":"MLUtils@0.3.1/ref/MLUtils.DataLoader"},{"tag":"document","title":"Data containers","docid":"FastAI@dev/doc/docs/data_containers.md"},{"tag":"sourcefile","title":"MLUtils/observation.jl","docid":"MLUtils@0.3.1/src/observation.jl"},{"tag":"document","title":"Presizing vision datasets for performance","docid":"FastAI@dev/doc/docs/notebooks/presizing.ipynb"},{"tag":"sourcefile","title":"MLUtils/obsview.jl","docid":"MLUtils@0.3.1/src/obsview.jl"},{"tag":"documentation","title":"BatchView","docid":"MLUtils@0.3.1/ref/MLUtils.BatchView"},{"tag":"sourcefile","title":"FastAI/datasets/recipe.jl","docid":"FastAI@dev/src/datasets/recipe.jl"},{"tag":"document","title":"Saving and loading models for inference","docid":"FastAI@dev/doc/docs/notebooks/serialization.ipynb"},{"tag":"documentation","title":"oversample","docid":"MLUtils@0.3.1/ref/MLUtils.oversample"},{"tag":"document","title":"New visualization tools for FastAI.jl","docid":"FastAI@dev/doc/docs/notebooks/10_26_showblock.ipynb"},{"tag":"sourcefile","title":"FastVision/encodings/imagepreprocessing.jl","docid":"FastVision@0.1.0/src/encodings/imagepreprocessing.jl"},{"tag":"document","title":"Introduction","docid":"FastAI@dev/doc/docs/introduction.md"},{"tag":"documentation","title":"joinobs","docid":"MLUtils@0.3.1/ref/MLUtils.joinobs"},{"tag":"documentation","title":"splitobs","docid":"MLUtils@0.3.1/ref/MLUtils.splitobs"},{"tag":"documentation","title":"shuffleobs","docid":"MLUtils@0.3.1/ref/MLUtils.shuffleobs"},{"tag":"sourcefile","title":"FastAI/FastAI.jl","docid":"FastAI@dev/src/FastAI.jl"},{"tag":"documentation","title":"randobs","docid":"MLUtils@0.3.1/ref/MLUtils.randobs"},{"tag":"sourcefile","title":"MLUtils/parallel.jl","docid":"MLUtils@0.3.1/src/parallel.jl"},{"tag":"document","title":"Custom learning tasks","docid":"FastAI@dev/doc/docs/learning_methods.md"},{"tag":"document","title":"Tabular Classification","docid":"FastAI@dev/doc/docs/notebooks/tabularclassification.ipynb"},{"tag":"documentation","title":"leavepout","docid":"MLUtils@0.3.1/ref/MLUtils.leavepout"},{"tag":"document","title":"Keypoint regression","docid":"FastAI@dev/doc/docs/notebooks/keypointregression.ipynb"},{"tag":"sourcefile","title":"FastTabular/recipes.jl","docid":"FastTabular@0.1.0/src/recipes.jl"},{"tag":"document","title":"TimeSeries Classification","docid":"FastAI@dev/doc/docs/notebooks/timeseriesclassification.ipynb"},{"tag":"document","title":"How to visualize data","docid":"FastAI@dev/doc/docs/notebooks/how_to_visualize.ipynb"},{"tag":"sourcefile","title":"FastAI/datasets/Datasets.jl","docid":"FastAI@dev/src/datasets/Datasets.jl"},{"tag":"document","title":"Text Classification","docid":"FastAI@dev/doc/docs/notebooks/textclassification.ipynb"},{"tag":"documentation","title":"mapobs","docid":"MLUtils@0.3.1/ref/MLUtils.mapobs"},{"tag":"documentation","title":"getobs!","docid":"MLUtils@0.3.1/ref/MLUtils.getobs!"},{"tag":"document","title":"Image segmentation","docid":"FastAI@dev/doc/docs/notebooks/imagesegmentation.ipynb"},{"tag":"document","title":"Discovery","docid":"FastAI@dev/doc/docs/discovery.md"},{"tag":"document","title":"Siamese image similarity","docid":"FastAI@dev/doc/docs/notebooks/siamese.ipynb"},{"tag":"document","title":"Blocks and encodings","docid":"FastAI@dev/doc/docs/background/blocksencodings.md"},{"tag":"sourcefile","title":"MLUtils/MLUtils.jl","docid":"MLUtils@0.3.1/src/MLUtils.jl"},{"tag":"documentation","title":"ObsView","docid":"MLUtils@0.3.1/ref/MLUtils.ObsView"},{"tag":"sourcefile","title":"FastVision/blocks/image.jl","docid":"FastVision@0.1.0/src/blocks/image.jl"},{"tag":"sourcefile","title":"MLUtils/batchview.jl","docid":"MLUtils@0.3.1/src/batchview.jl"},{"tag":"documentation","title":"numobs","docid":"MLUtils@0.3.1/ref/MLUtils.numobs"},{"tag":"document","title":"Performant data pipelines","docid":"FastAI@dev/doc/docs/background/datapipelines.md"},{"tag":"document","title":"Variational autoencoders","docid":"FastAI@dev/doc/docs/notebooks/vae.ipynb"},{"tag":"sourcefile","title":"FastTabular/FastTabular.jl","docid":"FastTabular@0.1.0/src/FastTabular.jl"},{"tag":"document","title":"tsregression","docid":"FastAI@dev/doc/docs/notebooks/tsregression.ipynb"},{"tag":"sourcefile","title":"MLUtils/utils.jl","docid":"MLUtils@0.3.1/src/utils.jl"},{"tag":"sourcefile","title":"FastAI/training/utils.jl","docid":"FastAI@dev/src/training/utils.jl"},{"tag":"sourcefile","title":"MLUtils/randobs.jl","docid":"MLUtils@0.3.1/src/randobs.jl"},{"tag":"sourcefile","title":"FastAI/tasks/taskdata.jl","docid":"FastAI@dev/src/tasks/taskdata.jl"},{"tag":"sourcefile","title":"MLUtils/eachobs.jl","docid":"MLUtils@0.3.1/src/eachobs.jl"},{"tag":"documentation","title":"kfolds","docid":"MLUtils@0.3.1/ref/MLUtils.kfolds"},{"tag":"documentation","title":"undersample","docid":"MLUtils@0.3.1/ref/MLUtils.undersample"},{"tag":"sourcefile","title":"MLUtils/obstransform.jl","docid":"MLUtils@0.3.1/src/obstransform.jl"},{"tag":"sourcefile","title":"FastVision/FastVision.jl","docid":"FastVision@0.1.0/src/FastVision.jl"}],"methods":[{"symbol_id":"MLUtils.getobs","module_id":"MLUtils","file":"observation.jl","line":196,"signature":"(::Signature)"},{"symbol_id":"MLUtils.getobs","module_id":"MLUtils","file":"observation.jl","line":198,"signature":"(::Signature)"},{"symbol_id":"MLUtils.getobs","module_id":"MLDatasets","file":"abstract_datasets.jl","line":13,"signature":"(::Signature)"},{"symbol_id":"MLUtils.getobs","module_id":"MLDatasets","file":"abstract_datasets.jl","line":14,"signature":"(::Signature)"},{"symbol_id":"MLUtils.getobs","module_id":"MLUtils","file":"obsview.jl","line":186,"signature":"(::Signature)"},{"symbol_id":"MLUtils.getobs","module_id":"MLUtils","file":"obsview.jl","line":187,"signature":"(::Signature)"},{"symbol_id":"MLUtils.getobs","module_id":"MLUtils","file":"observation.jl","line":219,"signature":"(::Signature)"},{"symbol_id":"MLUtils.getobs","module_id":"MLUtils","file":"observation.jl","line":217,"signature":"(::Signature)"},{"symbol_id":"MLUtils.getobs","module_id":"MLUtils","file":"batchview.jl","line":123,"signature":"(::Signature)"},{"symbol_id":"MLUtils.getobs","module_id":"MLUtils","file":"obsview.jl","line":229,"signature":"(::Signature)"},{"symbol_id":"MLUtils.getobs","module_id":"MLUtils","file":"observation.jl","line":163,"signature":"(::Signature)"},{"symbol_id":"MLUtils.getobs","module_id":"MLUtils","file":"observation.jl","line":158,"signature":"(::Signature)"},{"symbol_id":"MLUtils.getobs","module_id":"MLUtils","file":"observation.jl","line":109,"signature":"(::Signature)"},{"symbol_id":"MLUtils.getobs","module_id":"MLUtils","file":"observation.jl","line":110,"signature":"(::Signature)"},{"symbol_id":"MLUtils.getobs","module_id":"MLUtils","file":"observation.jl","line":107,"signature":"(::Signature)"},{"symbol_id":"MLUtils.getobs","module_id":"MLUtils","file":"SimpleTraits.jl","line":331,"signature":"(::Signature)"}],"package_id":"MLUtils@0.3.1","title":"getobs","symbol_id":"MLUtils.getobs","exported":true,"module_id":"MLUtils"},"tag":"documentation","children":[{"attributes":{"symbol":"MLUtils.getobs","line":56,"module":"MLUtils","file":"observation.jl"},"tag":"docstring","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["getobs(data, [idx])\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Return the observations corresponding to the observation index ",{"attributes":{},"tag":"code","children":["idx"],"type":"node"},". Note that ",{"attributes":{},"tag":"code","children":["idx"],"type":"node"}," can be any type as long as ",{"attributes":{},"tag":"code","children":["data"],"type":"node"}," has defined ",{"attributes":{},"tag":"code","children":["getobs"],"type":"node"}," for that type. If ",{"attributes":{},"tag":"code","children":["idx"],"type":"node"}," is not provided, then materialize all observations in ",{"attributes":{},"tag":"code","children":["data"],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"p","children":["If ",{"attributes":{},"tag":"code","children":["data"],"type":"node"}," does not have ",{"attributes":{},"tag":"code","children":["getobs"],"type":"node"}," defined, then in the case of ",{"attributes":{},"tag":"code","children":["Tables.table(data) == true"],"type":"node"}," returns the row(s) in position ",{"attributes":{},"tag":"code","children":["idx"],"type":"node"},", otherwise returns ",{"attributes":{},"tag":"code","children":["data[idx]"],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"p","children":["Authors of custom data containers should implement ",{"attributes":{},"tag":"code","children":["Base.getindex"],"type":"node"}," for their type instead of ",{"attributes":{},"tag":"code","children":["getobs"],"type":"node"},". ",{"attributes":{},"tag":"code","children":["getobs"],"type":"node"}," should only be implemented for types where there is a difference between ",{"attributes":{},"tag":"code","children":["getobs"],"type":"node"}," and ",{"attributes":{},"tag":"code","children":["Base.getindex"],"type":"node"}," (such as multi-dimensional arrays)."],"type":"node"},{"attributes":{},"tag":"p","children":["The returned observation(s) should be in the form intended to be passed as-is to some learning algorithm. There is no strict interface requirement on how this \"actual data\" must look like. Every author behind some custom data container can make this decision themselves. The output should be consistent when ",{"attributes":{},"tag":"code","children":["idx"],"type":"node"}," is a scalar vs vector."],"type":"node"},{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["getobs"],"type":"node"}," supports by default nested combinations of array, tuple, named tuples, and dictionaries."],"type":"node"},{"attributes":{},"tag":"p","children":["See also ",{"attributes":{"reftype":"symbol","href":"@ref","title":"","document_id":"MLUtils@0.3.1/ref/MLUtils.getobs!"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["getobs!"],"type":"node"}],"type":"node"}," and ",{"attributes":{"reftype":"symbol","href":"@ref","title":"","document_id":"MLUtils@0.3.1/ref/MLUtils.numobs"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["numobs"],"type":"node"}],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"h1","children":["Examples"],"type":"node"},{"attributes":{"lang":"jldoctest"},"tag":"codeblock","children":["# named tuples \nx = (a = [1, 2, 3], b = rand(6, 3))\n\ngetobs(x, 2) == (a = 2, b = x.b[:, 2])\ngetobs(x, [1, 3]) == (a = [1, 3], b = x.b[:, [1, 3]])\n\n\n# dictionaries\nx = Dict(:a => [1, 2, 3], :b => rand(6, 3))\n\ngetobs(x, 2) == Dict(:a => 2, :b => x[:b][:, 2])\ngetobs(x, [1, 3]) == Dict(:a => [1, 3], :b => x[:b][:, [1, 3]])\n"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}