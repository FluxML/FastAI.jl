{"attributes":{"kind":"function","backlinks":[{"tag":"sourcefile","title":"MLUtils/MLUtils.jl","docid":"MLUtils@0.4.4/src/MLUtils.jl"},{"tag":"documentation","title":"unbatch","docid":"MLUtils@0.4.4/ref/MLUtils.unbatch"},{"tag":"sourcefile","title":"MLUtils/utils.jl","docid":"MLUtils@0.4.4/src/utils.jl"},{"tag":"documentation","title":"unstack","docid":"MLUtils@0.4.4/ref/MLUtils.unstack"}],"methods":[{"symbol_id":"MLUtils.chunk","module_id":"MLUtils","file":"utils.jl","line":160,"signature":"(::Signature)"},{"symbol_id":"MLUtils.chunk","module_id":"MLUtils","file":"utils.jl","line":158,"signature":"(::Signature)"},{"symbol_id":"MLUtils.chunk","module_id":"MLUtils","file":"utils.jl","line":197,"signature":"(::Signature)"},{"symbol_id":"MLUtils.chunk","module_id":"MLUtils","file":"utils.jl","line":154,"signature":"(::Signature)"},{"symbol_id":"MLUtils.chunk","module_id":"MLUtils","file":"utils.jl","line":156,"signature":"(::Signature)"}],"package_id":"MLUtils@0.4.4","title":"chunk","symbol_id":"MLUtils.chunk","exported":true,"module_id":"MLUtils"},"tag":"documentation","children":[{"attributes":{"symbol":"MLUtils.chunk","line":86,"module":"MLUtils","file":"utils.jl"},"tag":"docstring","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["chunk(x, n; [dims])\nchunk(x; [size, dims])\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Split ",{"attributes":{},"tag":"code","children":["x"],"type":"node"}," into ",{"attributes":{},"tag":"code","children":["n"],"type":"node"}," parts or alternatively, if ",{"attributes":{},"tag":"code","children":["size"],"type":"node"}," is an integer, into equal chunks of size ",{"attributes":{},"tag":"code","children":["size"],"type":"node"},". The parts contain the same number of elements except possibly for the last one that can be smaller."],"type":"node"},{"attributes":{},"tag":"p","children":["In case ",{"attributes":{},"tag":"code","children":["size"],"type":"node"}," is a collection of integers instead, the elements of ",{"attributes":{},"tag":"code","children":["x"],"type":"node"}," are split into chunks of the given sizes."],"type":"node"},{"attributes":{},"tag":"p","children":["If ",{"attributes":{},"tag":"code","children":["x"],"type":"node"}," is an array, ",{"attributes":{},"tag":"code","children":["dims"],"type":"node"}," can be used to specify along which dimension to split (defaults to the last dimension)."],"type":"node"},{"attributes":{},"tag":"h1","children":["Examples"],"type":"node"},{"attributes":{"lang":"jldoctest"},"tag":"codeblock","children":["julia> chunk(1:10, 3)\n3-element Vector{UnitRange{Int64}}:\n 1:4\n 5:8\n 9:10\n\njulia> chunk(1:10; size = 2)\n5-element Vector{UnitRange{Int64}}:\n 1:2\n 3:4\n 5:6\n 7:8\n 9:10\n\njulia> x = reshape(collect(1:20), (5, 4))\n5×4 Matrix{Int64}:\n 1   6  11  16\n 2   7  12  17\n 3   8  13  18\n 4   9  14  19\n 5  10  15  20\n\njulia> xs = chunk(x, 2, dims=1)\n2-element Vector{SubArray{Int64, 2, Matrix{Int64}, Tuple{UnitRange{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}}:\n [1 6 11 16; 2 7 12 17; 3 8 13 18]\n [4 9 14 19; 5 10 15 20]\n\njulia> xs[1]\n3×4 view(::Matrix{Int64}, 1:3, :) with eltype Int64:\n 1  6  11  16\n 2  7  12  17\n 3  8  13  18\n\njulia> xes = chunk(x; size = 2, dims = 2)\n2-element Vector{SubArray{Int64, 2, Matrix{Int64}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}}:\n [1 6; 2 7; … ; 4 9; 5 10]\n [11 16; 12 17; … ; 14 19; 15 20]\n\njulia> xes[2]\n5×2 view(::Matrix{Int64}, :, 3:4) with eltype Int64:\n 11  16\n 12  17\n 13  18\n 14  19\n 15  20\n\njulia> chunk(1:6; size = [2, 4])\n2-element Vector{UnitRange{Int64}}:\n 1:2\n 3:6\n"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{"symbol":"MLUtils.chunk","line":166,"module":"MLUtils","file":"utils.jl"},"tag":"docstring","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["chunk(x, partition_idxs; [npartitions, dims])\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Partition the array ",{"attributes":{},"tag":"code","children":["x"],"type":"node"}," along the dimension ",{"attributes":{},"tag":"code","children":["dims"],"type":"node"}," according to the indexes in ",{"attributes":{},"tag":"code","children":["partition_idxs"],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["partition_idxs"],"type":"node"}," must be sorted and contain only positive integers between 1 and the number of partitions."],"type":"node"},{"attributes":{},"tag":"p","children":["If the number of partition ",{"attributes":{},"tag":"code","children":["npartitions"],"type":"node"}," is not provided, it is inferred from ",{"attributes":{},"tag":"code","children":["partition_idxs"],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"p","children":["If ",{"attributes":{},"tag":"code","children":["dims"],"type":"node"}," is not provided, it defaults to the last dimension."],"type":"node"},{"attributes":{},"tag":"p","children":["See also ",{"attributes":{"reftype":"symbol","href":"@ref","title":"","document_id":"MLUtils@0.4.4/ref/MLUtils.unbatch"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["unbatch"],"type":"node"}],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"h1","children":["Examples"],"type":"node"},{"attributes":{"lang":"jldoctest"},"tag":"codeblock","children":["julia> x = reshape([1:10;], 2, 5)\n2×5 Matrix{Int64}:\n 1  3  5  7   9\n 2  4  6  8  10\n\njulia> chunk(x, [1, 2, 2, 3, 3])\n3-element Vector{SubArray{Int64, 2, Matrix{Int64}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}}:\n [1; 2;;]\n [3 5; 4 6]\n [7 9; 8 10]\n"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}