{"attributes":{"kind":"function","backlinks":[{"tag":"sourcefile","title":"MLUtils/MLUtils.jl","docid":"MLUtils@0.4.4/src/MLUtils.jl"},{"tag":"document","title":"Data containers","docid":"FastAI@dev/doc/docs/data_containers.md"},{"tag":"documentation","title":"ObsView","docid":"MLUtils@0.4.4/ref/MLUtils.ObsView"},{"tag":"sourcefile","title":"FastAI/FastAI.jl","docid":"FastAI@dev/src/FastAI.jl"},{"tag":"sourcefile","title":"FastAI/learner.jl","docid":"FastAI@dev/src/learner.jl"},{"tag":"sourcefile","title":"MLUtils/splitobs.jl","docid":"MLUtils@0.4.4/src/splitobs.jl"},{"tag":"sourcefile","title":"FastAI/tasks/taskdata.jl","docid":"FastAI@dev/src/tasks/taskdata.jl"}],"methods":[{"symbol_id":"MLUtils.splitobs","module_id":"MLUtils","file":"splitobs.jl","line":17,"signature":"(::Signature)"},{"symbol_id":"MLUtils.splitobs","module_id":"MLUtils","file":"splitobs.jl","line":71,"signature":"(::Signature)"}],"package_id":"MLUtils@0.4.4","title":"splitobs","symbol_id":"MLUtils.splitobs","exported":true,"module_id":"MLUtils"},"tag":"documentation","children":[{"attributes":{"symbol":"MLUtils.splitobs","line":1,"module":"MLUtils","file":"splitobs.jl"},"tag":"docstring","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["splitobs(n::Int; at) -> Tuple\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Compute the indices for two or more disjoint subsets of the range ",{"attributes":{},"tag":"code","children":["1:n"],"type":"node"}," with splits given by ",{"attributes":{},"tag":"code","children":["at"],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"h1","children":["Examples"],"type":"node"},{"attributes":{"lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"call","children":[{"attributes":{},"tag":"Identifier","children":["julia"],"type":"node"},{"attributes":{},"tag":">","children":[">"],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"call","children":[{"attributes":{"reftype":"symbol","document_id":"MLUtils@0.4.4/ref/MLUtils.splitobs"},"tag":"reference","children":["splitobs"],"type":"node"},{"attributes":{},"tag":"(","children":["("],"type":"node"},{"attributes":{},"tag":"Integer","children":["100"],"type":"node"},{"attributes":{},"tag":",","children":[","],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"kw","children":[{"attributes":{},"tag":"Identifier","children":["at"],"type":"node"},{"attributes":{},"tag":"=","children":["="],"type":"node"},{"attributes":{},"tag":"Float","children":["0.7"],"type":"node"}],"type":"node"},{"attributes":{},"tag":")","children":[")"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"NewlineWs","children":["\n"],"type":"node"},{"attributes":{},"tag":"tuple","children":[{"attributes":{},"tag":"(","children":["("],"type":"node"},{"attributes":{},"tag":"call","children":[{"attributes":{},"tag":"Integer","children":["1"],"type":"node"},{"attributes":{},"tag":":","children":[":"],"type":"node"},{"attributes":{},"tag":"Integer","children":["70"],"type":"node"}],"type":"node"},{"attributes":{},"tag":",","children":[","],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"call","children":[{"attributes":{},"tag":"Integer","children":["71"],"type":"node"},{"attributes":{},"tag":":","children":[":"],"type":"node"},{"attributes":{},"tag":"Integer","children":["100"],"type":"node"}],"type":"node"},{"attributes":{},"tag":")","children":[")"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"NewlineWs","children":["\n"],"type":"node"},{"attributes":{},"tag":"NewlineWs","children":["\n"],"type":"node"},{"attributes":{},"tag":"call","children":[{"attributes":{},"tag":"Identifier","children":["julia"],"type":"node"},{"attributes":{},"tag":">","children":[">"],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"call","children":[{"attributes":{"reftype":"symbol","document_id":"MLUtils@0.4.4/ref/MLUtils.splitobs"},"tag":"reference","children":["splitobs"],"type":"node"},{"attributes":{},"tag":"(","children":["("],"type":"node"},{"attributes":{},"tag":"Integer","children":["100"],"type":"node"},{"attributes":{},"tag":",","children":[","],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"kw","children":[{"attributes":{},"tag":"Identifier","children":["at"],"type":"node"},{"attributes":{},"tag":"=","children":["="],"type":"node"},{"attributes":{},"tag":"tuple","children":[{"attributes":{},"tag":"(","children":["("],"type":"node"},{"attributes":{},"tag":"Float","children":["0.1"],"type":"node"},{"attributes":{},"tag":",","children":[","],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"Float","children":["0.4"],"type":"node"},{"attributes":{},"tag":")","children":[")"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":")","children":[")"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"NewlineWs","children":["\n"],"type":"node"},{"attributes":{},"tag":"tuple","children":[{"attributes":{},"tag":"(","children":["("],"type":"node"},{"attributes":{},"tag":"call","children":[{"attributes":{},"tag":"Integer","children":["1"],"type":"node"},{"attributes":{},"tag":":","children":[":"],"type":"node"},{"attributes":{},"tag":"Integer","children":["10"],"type":"node"}],"type":"node"},{"attributes":{},"tag":",","children":[","],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"call","children":[{"attributes":{},"tag":"Integer","children":["11"],"type":"node"},{"attributes":{},"tag":":","children":[":"],"type":"node"},{"attributes":{},"tag":"Integer","children":["50"],"type":"node"}],"type":"node"},{"attributes":{},"tag":",","children":[","],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"call","children":[{"attributes":{},"tag":"Integer","children":["51"],"type":"node"},{"attributes":{},"tag":":","children":[":"],"type":"node"},{"attributes":{},"tag":"Integer","children":["100"],"type":"node"}],"type":"node"},{"attributes":{},"tag":")","children":[")"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{"symbol":"MLUtils.splitobs","line":40,"module":"MLUtils","file":"splitobs.jl"},"tag":"docstring","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["splitobs(data; at, shuffle=false) -> Tuple\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Partition the ",{"attributes":{},"tag":"code","children":["data"],"type":"node"}," into two or more subsets. When ",{"attributes":{},"tag":"code","children":["at"],"type":"node"}," is a number (between 0 and 1) this specifies the proportion in the first subset. When ",{"attributes":{},"tag":"code","children":["at"],"type":"node"}," is a tuple, each entry specifies the proportion an a subset, with the last having ",{"attributes":{},"tag":"code","children":["1-sum(at)"],"type":"node"},". In all there are ",{"attributes":{},"tag":"code","children":["length(at)+1"],"type":"node"}," subsets returned."],"type":"node"},{"attributes":{},"tag":"p","children":["If ",{"attributes":{},"tag":"code","children":["shuffle=true"],"type":"node"},", randomly permute the observations before splitting."],"type":"node"},{"attributes":{},"tag":"p","children":["Supports any datatype implementing the ",{"attributes":{"reftype":"symbol","href":"@ref","title":"","document_id":"MLUtils@0.4.4/ref/MLUtils.numobs"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["numobs"],"type":"node"}],"type":"node"}," and ",{"attributes":{"reftype":"symbol","href":"@ref","title":"","document_id":"MLUtils@0.4.4/ref/MLUtils.getobs"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["getobs"],"type":"node"}],"type":"node"}," interfaces -- including arrays, tuples & NamedTuples of arrays."],"type":"node"},{"attributes":{},"tag":"h1","children":["Examples"],"type":"node"},{"attributes":{"lang":"jldoctest"},"tag":"codeblock","children":["julia> splitobs(permutedims(1:100); at=0.7)  # simple 70%-30% split, of a matrix\n([1 2 … 69 70], [71 72 … 99 100])\n\njulia> data = (x=ones(2,10), n=1:10)  # a NamedTuple, consistent last dimension\n(x = [1.0 1.0 … 1.0 1.0; 1.0 1.0 … 1.0 1.0], n = 1:10)\n\njulia> splitobs(data, at=(0.5, 0.3))  # a 50%-30%-20% split, e.g. train/test/validation\n((x = [1.0 1.0 … 1.0 1.0; 1.0 1.0 … 1.0 1.0], n = 1:5), (x = [1.0 1.0 1.0; 1.0 1.0 1.0], n = 6:8), (x = [1.0 1.0; 1.0 1.0], n = 9:10))\n\njulia> train, test = splitobs((permutedims(1.0:100.0), 101:200), at=0.7, shuffle=true);  # split a Tuple\n\njulia> vec(test[1]) .+ 100 == test[2]\ntrue\n"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}