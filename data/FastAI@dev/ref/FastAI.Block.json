{"attributes":{"kind":"abstract type","backlinks":[{"tag":"sourcefile","title":"FastAI/datablock/block.jl","docid":"FastAI@dev/src/datablock/block.jl"},{"tag":"documentation","title":"Image","docid":"FastVision@0.1.0/ref/FastVision.Image"},{"tag":"sourcefile","title":"FastAI/blocks/continuous.jl","docid":"FastAI@dev/src/blocks/continuous.jl"},{"tag":"sourcefile","title":"FastAI/encodings/onehot.jl","docid":"FastAI@dev/src/encodings/onehot.jl"},{"tag":"documentation","title":"AbstractBlockTask","docid":"FastAI@dev/ref/FastAI.AbstractBlockTask"},{"tag":"sourcefile","title":"FastAI/encodings/only.jl","docid":"FastAI@dev/src/encodings/only.jl"},{"tag":"documentation","title":"AbstractBlock","docid":"FastAI@dev/ref/FastAI.AbstractBlock"},{"tag":"sourcefile","title":"FastAI/datablock/wrappers.jl","docid":"FastAI@dev/src/datablock/wrappers.jl"},{"tag":"sourcefile","title":"FastAI/datablock/encoding.jl","docid":"FastAI@dev/src/datablock/encoding.jl"},{"tag":"sourcefile","title":"FastAI/blocks/label.jl","docid":"FastAI@dev/src/blocks/label.jl"}],"methods":[],"package_id":"FastAI@dev","title":"Block","symbol_id":"FastAI.Block","exported":false,"module_id":"FastAI"},"tag":"documentation","children":[{"attributes":{"symbol":"FastAI.Block","line":9,"module":"FastAI","file":"datablock/block.jl"},"tag":"docstring","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["abstract type Block\n"],"type":"node"},{"attributes":{},"tag":"p","children":["A block describes the meaning of a piece of data in the context of a learning task. For example, for supervised learning tasks, there is an input and a target and we want to learn to predict targets from inputs. Learning to predict a cat/dog label from 2D images is a supervised image classification task that can be represented with the ",{"attributes":{},"tag":"code","children":["Block"],"type":"node"},"s ",{"attributes":{},"tag":"code","children":["Image{2}()"],"type":"node"}," and ",{"attributes":{},"tag":"code","children":["Label([\"cat\", \"dog\"])"],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["Block"],"type":"node"},"s are used in virtually every part of the high-level interfaces, from data processing over model creation to visualization."],"type":"node"},{"attributes":{},"tag":"h2","children":["Extending"],"type":"node"},{"attributes":{},"tag":"p","children":["Consider the following when subtyping ",{"attributes":{},"tag":"code","children":["Block"],"type":"node"},". A block"],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["Does not hold observation data itself. Instead they are used in conjunction with data to annotate it with some meaning."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["If it has any fields, they should be metadata that cannot be derived from the data itself and is constant for every sample in the dataset. For example ",{"attributes":{},"tag":"code","children":["Label"],"type":"node"}," holds all possible classes which are constant for the learning problem."],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"h3","children":["Interfaces"],"type":"node"},{"attributes":{},"tag":"p","children":["There are many interfaces that can be implemented for a ",{"attributes":{},"tag":"code","children":["Block"],"type":"node"},". See the docstrings of each function for more info about how to implement it."],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{"reftype":"symbol","href":"#","title":"","document_id":"FastAI@dev/ref/FastAI.checkblock"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["checkblock"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"code","children":["(block, obs)"],"type":"node"},": check whether an observation is a valid block"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{"reftype":"symbol","href":"#","title":"","document_id":"FastAI@dev/ref/FastAI.mockblock"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["mockblock"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"code","children":["(block)"],"type":"node"},": randomly generate an observation"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{"reftype":"symbol","href":"#","title":"","document_id":"FastAI@dev/ref/FastAI.blocklossfn"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["blocklossfn"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"code","children":["(predblock, yblock)"],"type":"node"},": loss function for comparing two blocks"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{"reftype":"symbol","href":"#","title":"","document_id":"FastAI@dev/ref/FastAI.blockmodel"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["blockmodel"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"code","children":["(inblock, outblock[, backbone])"],"type":"node"},": construct a task-specific model"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{"reftype":"symbol","href":"#","title":"","document_id":"FastAI@dev/ref/FastAI.blockbackbone"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["blockbackbone"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"code","children":["(inblock)"],"type":"node"},": construct a backbone model that takes in specific data"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{"reftype":"symbol","href":"#","title":"","document_id":"FastAI@dev/ref/FastAI.showblock!"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["showblock!"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"code","children":["(block, obs)"],"type":"node"},": visualize an observation"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}