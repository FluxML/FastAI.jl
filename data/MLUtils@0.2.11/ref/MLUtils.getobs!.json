{"attributes":{"kind":"function","backlinks":[{"tag":"documentation","title":"getobs","docid":"MLUtils@0.2.11/ref/MLUtils.getobs"},{"tag":"sourcefile","title":"MLUtils/obsview.jl","docid":"MLUtils@0.2.11/src/obsview.jl"},{"tag":"sourcefile","title":"MLUtils/eachobs.jl","docid":"MLUtils@0.2.11/src/eachobs.jl"},{"tag":"sourcefile","title":"MLUtils/parallel.jl","docid":"MLUtils@0.2.11/src/parallel.jl"},{"tag":"sourcefile","title":"MLUtils/MLUtils.jl","docid":"MLUtils@0.2.11/src/MLUtils.jl"},{"tag":"sourcefile","title":"MLUtils/observation.jl","docid":"MLUtils@0.2.11/src/observation.jl"}],"methods":[{"symbol_id":"MLUtils.getobs!","module_id":"MLUtils","file":"observation.jl","line":107,"signature":"(::Signature)"},{"symbol_id":"MLUtils.getobs!","module_id":"MLUtils","file":"observation.jl","line":101,"signature":"(::Signature)"},{"symbol_id":"MLUtils.getobs!","module_id":"MLUtils","file":"observation.jl","line":139,"signature":"(::Signature)"},{"symbol_id":"MLUtils.getobs!","module_id":"MLUtils","file":"observation.jl","line":157,"signature":"(::Signature)"},{"symbol_id":"MLUtils.getobs!","module_id":"MLUtils","file":"obsview.jl","line":189,"signature":"(::Signature)"},{"symbol_id":"MLUtils.getobs!","module_id":"MLUtils","file":"obsview.jl","line":190,"signature":"(::Signature)"},{"symbol_id":"MLUtils.getobs!","module_id":"FastAI","file":"tasks/taskdata.jl","line":26,"signature":"(::Signature)"},{"symbol_id":"MLUtils.getobs!","module_id":"MLUtils","file":"observation.jl","line":67,"signature":"(::Signature)"}],"package_id":"MLUtils@0.2.11","title":"getobs!","symbol_id":"MLUtils.getobs!","exported":true,"module_id":"MLUtils"},"tag":"documentation","children":[{"attributes":{"symbol":"MLUtils.getobs!","line":51,"module":"MLUtils","file":"observation.jl"},"tag":"docstring","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["getobs!(buffer, data, idx)\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Inplace version of ",{"attributes":{},"tag":"code","children":["getobs(data, idx)"],"type":"node"},". If this method is defined for the type of ",{"attributes":{},"tag":"code","children":["data"],"type":"node"},", then ",{"attributes":{},"tag":"code","children":["buffer"],"type":"node"}," should be used to store the result, instead of allocating a dedicated object."],"type":"node"},{"attributes":{},"tag":"p","children":["Implementing this function is optional. In the case no such method is provided for the type of ",{"attributes":{},"tag":"code","children":["data"],"type":"node"},", then ",{"attributes":{},"tag":"code","children":["buffer"],"type":"node"}," will be ",{"attributes":{},"tag":"em","children":["ignored"],"type":"node"}," and the result of ",{"attributes":{"reftype":"symbol","href":"@ref","title":"","document_id":"MLUtils@0.2.11/ref/MLUtils.getobs"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["getobs"],"type":"node"}],"type":"node"}," returned. This could be because the type of ",{"attributes":{},"tag":"code","children":["data"],"type":"node"}," may not lend itself to the concept of ",{"attributes":{},"tag":"code","children":["copy!"],"type":"node"},". Thus, supporting a custom ",{"attributes":{},"tag":"code","children":["getobs!"],"type":"node"}," is optional and not required."],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}