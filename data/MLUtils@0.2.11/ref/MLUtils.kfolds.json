{"attributes":{"kind":"function","backlinks":[{"tag":"documentation","title":"leavepout","docid":"MLUtils@0.2.11/ref/MLUtils.leavepout"},{"tag":"sourcefile","title":"MLUtils/folds.jl","docid":"MLUtils@0.2.11/src/folds.jl"},{"tag":"sourcefile","title":"MLUtils/MLUtils.jl","docid":"MLUtils@0.2.11/src/MLUtils.jl"},{"tag":"documentation","title":"ObsView","docid":"MLUtils@0.2.11/ref/MLUtils.ObsView"}],"methods":[{"symbol_id":"MLUtils.kfolds","module_id":"MLUtils","file":"folds.jl","line":41,"signature":"(::Signature)"},{"symbol_id":"MLUtils.kfolds","module_id":"MLUtils","file":"folds.jl","line":114,"signature":"(::Signature)"},{"symbol_id":"MLUtils.kfolds","module_id":"MLUtils","file":"folds.jl","line":106,"signature":"(::Signature)"}],"package_id":"MLUtils@0.2.11","title":"kfolds","symbol_id":"MLUtils.kfolds","exported":true,"module_id":"MLUtils"},"tag":"documentation","children":[{"attributes":{"symbol":"MLUtils.kfolds","line":2,"module":"MLUtils","file":"folds.jl"},"tag":"docstring","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["kfolds(n::Integer, k = 5) -> Tuple\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Compute the train/validation assignments for ",{"attributes":{},"tag":"code","children":["k"],"type":"node"}," repartitions of ",{"attributes":{},"tag":"code","children":["n"],"type":"node"}," observations, and return them in the form of two vectors. The first vector contains the index-vectors for the training subsets, and the second vector the index-vectors for the validation subsets respectively. A general rule of thumb is to use either ",{"attributes":{},"tag":"code","children":["k = 5"],"type":"node"}," or ",{"attributes":{},"tag":"code","children":["k = 10"],"type":"node"},". The following code snippet generates the indices assignments for ",{"attributes":{},"tag":"code","children":["k = 5"],"type":"node"}],"type":"node"},{"attributes":{"lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"toplevel","children":[{"attributes":{},"tag":"=","children":[{"attributes":{},"tag":"tuple","children":[{"attributes":{},"tag":"call","children":[{"attributes":{},"tag":"Identifier","children":["julia"],"type":"node"},{"attributes":{},"tag":">","children":[">"],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"Identifier","children":["train_idx"],"type":"node"}],"type":"node"},{"attributes":{},"tag":",","children":[","],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"Identifier","children":["val_idx"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"=","children":["="],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"call","children":[{"attributes":{"reftype":"symbol","document_id":"MLUtils@0.2.11/ref/MLUtils.kfolds"},"tag":"reference","children":["kfolds"],"type":"node"},{"attributes":{},"tag":"(","children":["("],"type":"node"},{"attributes":{},"tag":"Integer","children":["10"],"type":"node"},{"attributes":{},"tag":",","children":[","],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"Integer","children":["5"],"type":"node"},{"attributes":{},"tag":")","children":[")"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":";","children":[";"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["Each observation is assigned to the validation subset once (and only once). Thus, a union over all validation index-vectors reproduces the full range ",{"attributes":{},"tag":"code","children":["1:n"],"type":"node"},". Note that there is no random assignment of observations to subsets, which means that adjacent observations are likely to be part of the same validation subset."],"type":"node"},{"attributes":{"lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":["julia> train_idx\n5-element Array{Array{Int64,1},1}:\n [3,4,5,6,7,8,9,10]\n [1,2,5,6,7,8,9,10]\n [1,2,3,4,7,8,9,10]\n [1,2,3,4,5,6,9,10]\n [1,2,3,4,5,6,7,8]\n\njulia> val_idx\n5-element Array{UnitRange{Int64},1}:\n 1:2\n 3:4\n 5:6\n 7:8\n 9:10"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{"symbol":"MLUtils.kfolds","line":62,"module":"MLUtils","file":"folds.jl"},"tag":"docstring","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["kfolds(data, [k = 5])\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Repartition a ",{"attributes":{},"tag":"code","children":["data"],"type":"node"}," container ",{"attributes":{},"tag":"code","children":["k"],"type":"node"}," times using a ",{"attributes":{},"tag":"code","children":["k"],"type":"node"}," folds strategy and return the sequence of folds as a lazy iterator. Only data subsets are created, which means that no actual data is copied until ",{"attributes":{"reftype":"symbol","href":"@ref","title":"","document_id":"MLUtils@0.2.11/ref/MLUtils.getobs"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["getobs"],"type":"node"}],"type":"node"}," is invoked."],"type":"node"},{"attributes":{},"tag":"p","children":["Conceptually, a k-folds repartitioning strategy divides the given ",{"attributes":{},"tag":"code","children":["data"],"type":"node"}," into ",{"attributes":{},"tag":"code","children":["k"],"type":"node"}," roughly equal-sized parts. Each part will serve as validation set once, while the remaining parts are used for training. This results in ",{"attributes":{},"tag":"code","children":["k"],"type":"node"}," different partitions of ",{"attributes":{},"tag":"code","children":["data"],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"p","children":["In the case that the size of the dataset is not dividable by the specified ",{"attributes":{},"tag":"code","children":["k"],"type":"node"},", the remaining observations will be evenly distributed among the parts."],"type":"node"},{"attributes":{"lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"for","children":[{"attributes":{},"tag":"for","children":["for"],"type":"node"},{"attributes":{},"tag":"=","children":[{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"tuple","children":[{"attributes":{},"tag":"(","children":["("],"type":"node"},{"attributes":{},"tag":"Identifier","children":["x_train"],"type":"node"},{"attributes":{},"tag":",","children":[","],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"Identifier","children":["x_val"],"type":"node"},{"attributes":{},"tag":")","children":[")"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"in","children":["in"],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"call","children":[{"attributes":{"reftype":"symbol","document_id":"MLUtils@0.2.11/ref/MLUtils.kfolds"},"tag":"reference","children":["kfolds"],"type":"node"},{"attributes":{},"tag":"(","children":["("],"type":"node"},{"attributes":{},"tag":"Identifier","children":["X"],"type":"node"},{"attributes":{},"tag":",","children":[","],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"kw","children":[{"attributes":{},"tag":"Identifier","children":["k"],"type":"node"},{"attributes":{},"tag":"=","children":["="],"type":"node"},{"attributes":{},"tag":"Integer","children":["10"],"type":"node"}],"type":"node"},{"attributes":{},"tag":")","children":[")"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"block","children":[{"attributes":{},"tag":"NewlineWs","children":["\n    "],"type":"node"},{"attributes":{},"tag":"Comment","children":["# code called 10 times"],"type":"node"},{"attributes":{},"tag":"NewlineWs","children":["\n    "],"type":"node"},{"attributes":{},"tag":"Comment","children":["# nobs(x_val) may differ up to Â±1 over iterations"],"type":"node"},{"attributes":{},"tag":"NewlineWs","children":["\n"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"end","children":["end"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["Multiple variables are supported (e.g. for labeled data)"],"type":"node"},{"attributes":{"lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"for","children":[{"attributes":{},"tag":"for","children":["for"],"type":"node"},{"attributes":{},"tag":"=","children":[{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"tuple","children":[{"attributes":{},"tag":"(","children":["("],"type":"node"},{"attributes":{},"tag":"tuple","children":[{"attributes":{},"tag":"(","children":["("],"type":"node"},{"attributes":{},"tag":"Identifier","children":["x_train"],"type":"node"},{"attributes":{},"tag":",","children":[","],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"Identifier","children":["y_train"],"type":"node"},{"attributes":{},"tag":")","children":[")"],"type":"node"}],"type":"node"},{"attributes":{},"tag":",","children":[","],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"Identifier","children":["val"],"type":"node"},{"attributes":{},"tag":")","children":[")"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"in","children":["in"],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"call","children":[{"attributes":{"reftype":"symbol","document_id":"MLUtils@0.2.11/ref/MLUtils.kfolds"},"tag":"reference","children":["kfolds"],"type":"node"},{"attributes":{},"tag":"(","children":["("],"type":"node"},{"attributes":{},"tag":"tuple","children":[{"attributes":{},"tag":"(","children":["("],"type":"node"},{"attributes":{},"tag":"Identifier","children":["X"],"type":"node"},{"attributes":{},"tag":",","children":[","],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"Identifier","children":["Y"],"type":"node"},{"attributes":{},"tag":")","children":[")"],"type":"node"}],"type":"node"},{"attributes":{},"tag":",","children":[","],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"kw","children":[{"attributes":{},"tag":"Identifier","children":["k"],"type":"node"},{"attributes":{},"tag":"=","children":["="],"type":"node"},{"attributes":{},"tag":"Integer","children":["10"],"type":"node"}],"type":"node"},{"attributes":{},"tag":")","children":[")"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"block","children":[{"attributes":{},"tag":"NewlineWs","children":["\n    "],"type":"node"},{"attributes":{},"tag":"Comment","children":["# ..."],"type":"node"},{"attributes":{},"tag":"NewlineWs","children":["\n"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"end","children":["end"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["By default the folds are created using static splits. Use ",{"attributes":{"reftype":"symbol","href":"@ref","title":"","document_id":"MLUtils@0.2.11/ref/MLUtils.shuffleobs"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["shuffleobs"],"type":"node"}],"type":"node"}," to randomly assign observations to the folds."],"type":"node"},{"attributes":{"lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"for","children":[{"attributes":{},"tag":"for","children":["for"],"type":"node"},{"attributes":{},"tag":"=","children":[{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"tuple","children":[{"attributes":{},"tag":"(","children":["("],"type":"node"},{"attributes":{},"tag":"Identifier","children":["x_train"],"type":"node"},{"attributes":{},"tag":",","children":[","],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"Identifier","children":["x_val"],"type":"node"},{"attributes":{},"tag":")","children":[")"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"in","children":["in"],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"call","children":[{"attributes":{"reftype":"symbol","document_id":"MLUtils@0.2.11/ref/MLUtils.kfolds"},"tag":"reference","children":["kfolds"],"type":"node"},{"attributes":{},"tag":"(","children":["("],"type":"node"},{"attributes":{},"tag":"call","children":[{"attributes":{"reftype":"symbol","document_id":"MLUtils@0.2.11/ref/MLUtils.shuffleobs"},"tag":"reference","children":["shuffleobs"],"type":"node"},{"attributes":{},"tag":"(","children":["("],"type":"node"},{"attributes":{},"tag":"Identifier","children":["X"],"type":"node"},{"attributes":{},"tag":")","children":[")"],"type":"node"}],"type":"node"},{"attributes":{},"tag":",","children":[","],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"kw","children":[{"attributes":{},"tag":"Identifier","children":["k"],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"=","children":["="],"type":"node"},{"attributes":{},"tag":"Whitespace","children":[" "],"type":"node"},{"attributes":{},"tag":"Integer","children":["10"],"type":"node"}],"type":"node"},{"attributes":{},"tag":")","children":[")"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"block","children":[{"attributes":{},"tag":"NewlineWs","children":["\n    "],"type":"node"},{"attributes":{},"tag":"Comment","children":["# ..."],"type":"node"},{"attributes":{},"tag":"NewlineWs","children":["\n"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"end","children":["end"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["See ",{"attributes":{"reftype":"symbol","href":"@ref","title":"","document_id":"MLUtils@0.2.11/ref/MLUtils.leavepout"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["leavepout"],"type":"node"}],"type":"node"}," for a related function."],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}