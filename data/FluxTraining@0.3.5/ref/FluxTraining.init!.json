{"attributes":{"kind":"function","backlinks":[{"tag":"sourcefile","title":"FluxTraining/callbacks/trace.jl","docid":"FluxTraining@0.3.5/src/callbacks/trace.jl"},{"tag":"sourcefile","title":"FluxTraining/callbackutils.jl","docid":"FluxTraining@0.3.5/src/callbackutils.jl"},{"tag":"documentation","title":"Callback","docid":"FluxTraining@0.3.5/ref/FluxTraining.Callback"},{"tag":"sourcefile","title":"FluxTraining/callbacks/scheduler.jl","docid":"FluxTraining@0.3.5/src/callbacks/scheduler.jl"},{"tag":"sourcefile","title":"FluxTraining/callbacks/conditional.jl","docid":"FluxTraining@0.3.5/src/callbacks/conditional.jl"},{"tag":"sourcefile","title":"FluxTraining/callbacks/recorder.jl","docid":"FluxTraining@0.3.5/src/callbacks/recorder.jl"},{"tag":"sourcefile","title":"FluxTraining/learner.jl","docid":"FluxTraining@0.3.5/src/learner.jl"},{"tag":"sourcefile","title":"FluxTraining/callbacks/metrics.jl","docid":"FluxTraining@0.3.5/src/callbacks/metrics.jl"},{"tag":"sourcefile","title":"FluxTraining/callbacks/callback.jl","docid":"FluxTraining@0.3.5/src/callbacks/callback.jl"}],"methods":[{"symbol_id":"FluxTraining.init!","module_id":"FluxTraining","file":"callbacks/trace.jl","line":26,"signature":"(::Signature)"},{"symbol_id":"FluxTraining.init!","module_id":"FluxTraining","file":"callbacks/conditional.jl","line":64,"signature":"(::Signature)"},{"symbol_id":"FluxTraining.init!","module_id":"FluxTraining","file":"callbacks/metrics.jl","line":55,"signature":"(::Signature)"},{"symbol_id":"FluxTraining.init!","module_id":"FluxTraining","file":"callbacks/recorder.jl","line":24,"signature":"(::Signature)"},{"symbol_id":"FluxTraining.init!","module_id":"FluxTraining","file":"callbacks/scheduler.jl","line":45,"signature":"(::Signature)"},{"symbol_id":"FluxTraining.init!","module_id":"FluxTraining","file":"callbacks/callback.jl","line":274,"signature":"(::Signature)"},{"symbol_id":"FluxTraining.init!","module_id":"FluxTraining","file":"learner.jl","line":11,"signature":"(::Signature)"}],"package_id":"FluxTraining@0.3.5","title":"init!","symbol_id":"FluxTraining.init!","exported":false,"module_id":"FluxTraining"},"tag":"documentation","children":[{"attributes":{"symbol":"FluxTraining.init!","line":258,"module":"FluxTraining","file":"callbacks/callback.jl"},"tag":"docstring","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["init!(callback, learner)\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Initialize a callback. Default is to do nothing."],"type":"node"},{"attributes":{},"tag":"h2","children":["Extending"],"type":"node"},{"attributes":{},"tag":"p","children":["To extend for a callback, implement ",{"attributes":{},"tag":"code","children":["init!(cb::MyCallback, learner)"],"type":"node"},". ",{"attributes":{},"tag":"code","children":["init!"],"type":"node"}," can set up internal state of a callback that depends on ",{"attributes":{},"tag":"code","children":["learner"],"type":"node"}," and can also initialize shared callback state in ",{"attributes":{},"tag":"code","children":["learner.cbstate"],"type":"node"},". Just like ",{"attributes":{},"tag":"code","children":["on"],"type":"node"}," event handlers, the state access permissions must be correctly defined using ",{"attributes":{"reftype":"symbol","href":"#","title":"","document_id":"FluxTraining@0.3.5/ref/FluxTraining.stateaccess"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["stateaccess"],"type":"node"}],"type":"node"}," to do so."],"type":"node"},{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["init!"],"type":"node"}," must also be idempotent, i.e. running it twice on the same ",{"attributes":{},"tag":"code","children":["Learner"],"type":"node"}," should have the same effect as runnning it once."],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}