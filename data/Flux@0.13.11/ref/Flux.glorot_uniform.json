{"attributes":{"kind":"function","backlinks":[{"tag":"sourcefile","title":"Flux/layers/recurrent.jl","docid":"Flux@0.13.11/src/layers/recurrent.jl"},{"tag":"sourcefile","title":"Flux/layers/conv.jl","docid":"Flux@0.13.11/src/layers/conv.jl"},{"tag":"sourcefile","title":"Flux/layers/basic.jl","docid":"Flux@0.13.11/src/layers/basic.jl"},{"tag":"sourcefile","title":"Flux/utils.jl","docid":"Flux@0.13.11/src/utils.jl"}],"methods":[{"symbol_id":"Flux.glorot_uniform","module_id":"Flux","file":"utils.jl","line":107,"signature":"(::Signature)"},{"symbol_id":"Flux.glorot_uniform","module_id":"Flux","file":"utils.jl","line":102,"signature":"(::Signature)"},{"symbol_id":"Flux.glorot_uniform","module_id":"Flux","file":"utils.jl","line":106,"signature":"(::Signature)"}],"package_id":"Flux@0.13.11","title":"glorot_uniform","symbol_id":"Flux.glorot_uniform","exported":false,"module_id":"Flux"},"tag":"documentation","children":[{"attributes":{"symbol":"Flux.glorot_uniform","line":66,"module":"Flux","file":"utils.jl"},"tag":"docstring","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["glorot_uniform([rng = default_rng_value()], size...; gain = 1) -> Array\nglorot_uniform([rng]; kw...) -> Function\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Return an ",{"attributes":{},"tag":"code","children":["Array{Float32}"],"type":"node"}," of the given ",{"attributes":{},"tag":"code","children":["size"],"type":"node"}," containing random numbers drawn from a uniform distribution on the interval ",{"attributes":{},"tag":"math","children":["[-x, x]"],"type":"node"},", where ",{"attributes":{},"tag":"code","children":["x = gain * sqrt(6 / (fan_in + fan_out))"],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"p","children":["This method is described in [1] and also known as Xavier initialization."],"type":"node"},{"attributes":{},"tag":"h1","children":["Examples"],"type":"node"},{"attributes":{"lang":"jldoctest; setup = :(using Random; Random.seed!(0))"},"tag":"codeblock","children":["julia> Flux.glorot_uniform(3, 4) |> summary\n\"3Ã—4 Matrix{Float32}\"\n\njulia> round.(extrema(Flux.glorot_uniform(10, 100)), digits=3)\n(-0.232f0, 0.234f0)\n\njulia> round.(extrema(Flux.glorot_uniform(100, 10)), digits=3)\n(-0.233f0, 0.233f0)\n\njulia> round.(extrema(Flux.glorot_uniform(100, 100)), digits=3)\n(-0.173f0, 0.173f0)\n\njulia> Dense(3 => 2, tanh; init = Flux.glorot_uniform(MersenneTwister(1)))\nDense(3 => 2, tanh)  # 8 parameters\n\njulia> ans.bias\n2-element Vector{Float32}:\n 0.0\n 0.0\n"],"type":"node"},{"attributes":{},"tag":"h1","children":["References"],"type":"node"},{"attributes":{},"tag":"p","children":["[1] Glorot, Xavier, and Yoshua Bengio. \"Understanding the difficulty of training deep feedforward neural networks.\" ",{"attributes":{},"tag":"em","children":["Proceedings of the thirteenth international conference on artificial intelligence and statistics"],"type":"node"},". 2010."],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}