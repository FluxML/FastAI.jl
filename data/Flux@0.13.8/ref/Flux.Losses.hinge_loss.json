{"attributes":{"kind":"function","backlinks":[{"tag":"sourcefile","title":"Flux/losses/functions.jl","docid":"Flux@0.13.8/src/losses/functions.jl"},{"tag":"sourcefile","title":"Flux/losses/Losses.jl","docid":"Flux@0.13.8/src/losses/Losses.jl"}],"methods":[{"symbol_id":"Flux.Losses.hinge_loss","module_id":"Flux.Losses","file":"losses/functions.jl","line":443,"signature":"(::Signature)"}],"package_id":"Flux@0.13.8","title":"hinge_loss","symbol_id":"Flux.Losses.hinge_loss","exported":true,"module_id":"Flux.Losses"},"tag":"documentation","children":[{"attributes":{"symbol":"Flux.Losses.hinge_loss","line":413,"module":"Flux.Losses","file":"losses/functions.jl"},"tag":"docstring","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["hinge_loss(ŷ, y; agg = mean)\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Return the ",{"attributes":{"href":"https://en.wikipedia.org/wiki/Hinge_loss","title":""},"tag":"a","children":["hinge_loss"],"type":"node"}," given the prediction ",{"attributes":{},"tag":"code","children":["ŷ"],"type":"node"}," and true labels ",{"attributes":{},"tag":"code","children":["y"],"type":"node"}," (containing 1 or -1); calculated as"],"type":"node"},{"attributes":{"lang":""},"tag":"codeblock","children":["sum(max.(0, 1 .- ŷ .* y)) / size(y, 2)\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Usually used with classifiers like Support Vector Machines. See also: ",{"attributes":{"href":"@ref","title":""},"tag":"a","children":[{"attributes":{},"tag":"code","children":["squared_hinge_loss"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"h1","children":["Example"],"type":"node"},{"attributes":{"lang":"jldoctest"},"tag":"codeblock","children":["julia> y_true = [1, -1, 1, 1];\n\njulia> y_pred = [0.1, 0.3, 1, 1.5];\n\njulia> Flux.hinge_loss(y_pred, y_true)\n0.55\n\njulia> Flux.hinge_loss(y_pred[1], y_true[1]) != 0  # same sign but |ŷ| < 1\ntrue\n\njulia> Flux.hinge_loss(y_pred[end], y_true[end]) == 0  # same sign but |ŷ| >= 1\ntrue\n\njulia> Flux.hinge_loss(y_pred[2], y_true[2]) != 0 # opposite signs\ntrue\n"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}