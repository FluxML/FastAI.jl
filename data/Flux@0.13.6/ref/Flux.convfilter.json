{"attributes":{"kind":"function","backlinks":[{"tag":"sourcefile","title":"Flux/layers/conv.jl","docid":"Flux@0.13.6/src/layers/conv.jl"}],"methods":[{"symbol_id":"Flux.convfilter","module_id":"Flux","file":"layers/conv.jl","line":182,"signature":"(::Signature)"}],"package_id":"Flux@0.13.6","title":"convfilter","symbol_id":"Flux.convfilter","exported":false,"module_id":"Flux"},"tag":"documentation","children":[{"attributes":{"symbol":"Flux.convfilter","line":171,"module":"Flux","file":"layers/conv.jl"},"tag":"docstring","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["convfilter(filter::Tuple, in => out[; init = glorot_uniform])\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Constructs a standard convolutional weight matrix with given ",{"attributes":{},"tag":"code","children":["filter"],"type":"node"}," and channels from ",{"attributes":{},"tag":"code","children":["in"],"type":"node"}," to ",{"attributes":{},"tag":"code","children":["out"],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"p","children":["Accepts the keyword ",{"attributes":{},"tag":"code","children":["init"],"type":"node"}," (default: ",{"attributes":{},"tag":"code","children":["glorot_uniform"],"type":"node"},") to control the sampling distribution."],"type":"node"},{"attributes":{},"tag":"p","children":["This is internally used by the ",{"attributes":{"reftype":"symbol","href":"@ref","title":"","document_id":"Flux@0.13.6/ref/Flux.Conv"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["Conv"],"type":"node"}],"type":"node"}," layer."],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}