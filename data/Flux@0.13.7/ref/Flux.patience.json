{"attributes":{"kind":"function","backlinks":[{"tag":"sourcefile","title":"Flux/utils.jl","docid":"Flux@0.13.7/src/utils.jl"}],"methods":[{"symbol_id":"Flux.patience","module_id":"Flux","file":"utils.jl","line":664,"signature":"(::Signature)"}],"package_id":"Flux@0.13.7","title":"patience","symbol_id":"Flux.patience","exported":false,"module_id":"Flux"},"tag":"documentation","children":[{"attributes":{"symbol":"Flux.patience","line":640,"module":"Flux","file":"utils.jl"},"tag":"docstring","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["patience(predicate, wait)\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Return a function that internally counts by one when ",{"attributes":{},"tag":"code","children":["predicate(...) == true"],"type":"node"},", otherwise the count is reset to zero. If the count is greater than or equal to ",{"attributes":{},"tag":"code","children":["wait"],"type":"node"},", the function returns ",{"attributes":{},"tag":"code","children":["true"],"type":"node"},", otherwise it returns ",{"attributes":{},"tag":"code","children":["false"],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"h1","children":["Examples"],"type":"node"},{"attributes":{"lang":"jldoctest"},"tag":"codeblock","children":["julia> loss() = rand();\n\njulia> trigger = Flux.patience(() -> loss() < 1, 3);\n\n\njulia> for i in 1:10\n         @info \"Epoch $i\"\n         trigger() && break\n       end\n[ Info: Epoch 1\n[ Info: Epoch 2\n[ Info: Epoch 3\n"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}