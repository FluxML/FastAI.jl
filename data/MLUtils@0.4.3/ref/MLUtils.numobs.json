{"attributes":{"kind":"function","backlinks":[{"tag":"documentation","title":"getobs!","docid":"MLUtils@0.4.3/ref/MLUtils.getobs!"},{"tag":"documentation","title":"undersample","docid":"MLUtils@0.4.3/ref/MLUtils.undersample"},{"tag":"documentation","title":"randobs","docid":"MLUtils@0.4.3/ref/MLUtils.randobs"},{"tag":"sourcefile","title":"MLUtils/MLUtils.jl","docid":"MLUtils@0.4.3/src/MLUtils.jl"},{"tag":"document","title":"Data containers","docid":"FastAI@dev/doc/docs/data_containers.md"},{"tag":"document","title":"Presizing vision datasets for performance","docid":"FastAI@dev/doc/docs/notebooks/presizing.ipynb"},{"tag":"documentation","title":"getobs","docid":"MLUtils@0.4.3/ref/MLUtils.getobs"},{"tag":"documentation","title":"shuffleobs","docid":"MLUtils@0.4.3/ref/MLUtils.shuffleobs"},{"tag":"document","title":"Saving and loading models for inference","docid":"FastAI@dev/doc/docs/notebooks/serialization.ipynb"},{"tag":"sourcefile","title":"FastAI/FastAI.jl","docid":"FastAI@dev/src/FastAI.jl"},{"tag":"sourcefile","title":"MLUtils/observation.jl","docid":"MLUtils@0.4.3/src/observation.jl"},{"tag":"sourcefile","title":"MLUtils/parallel.jl","docid":"MLUtils@0.4.3/src/parallel.jl"},{"tag":"documentation","title":"oversample","docid":"MLUtils@0.4.3/ref/MLUtils.oversample"},{"tag":"sourcefile","title":"FastVision/encodings/imagepreprocessing.jl","docid":"FastVision@0.1.1/src/encodings/imagepreprocessing.jl"},{"tag":"document","title":"Keypoint regression","docid":"FastAI@dev/doc/docs/notebooks/keypointregression.ipynb"},{"tag":"documentation","title":"BatchView","docid":"MLUtils@0.4.3/ref/MLUtils.BatchView"},{"tag":"documentation","title":"ObsView","docid":"MLUtils@0.4.3/ref/MLUtils.ObsView"},{"tag":"sourcefile","title":"MLUtils/resample.jl","docid":"MLUtils@0.4.3/src/resample.jl"},{"tag":"document","title":"How to visualize data","docid":"FastAI@dev/doc/docs/notebooks/how_to_visualize.ipynb"},{"tag":"sourcefile","title":"FastVision/FastVision.jl","docid":"FastVision@0.1.1/src/FastVision.jl"},{"tag":"sourcefile","title":"FastAI/datasets/Datasets.jl","docid":"FastAI@dev/src/datasets/Datasets.jl"},{"tag":"documentation","title":"splitobs","docid":"MLUtils@0.4.3/ref/MLUtils.splitobs"},{"tag":"document","title":"Siamese image similarity","docid":"FastAI@dev/doc/docs/notebooks/siamese.ipynb"},{"tag":"sourcefile","title":"MLUtils/obsview.jl","docid":"MLUtils@0.4.3/src/obsview.jl"},{"tag":"document","title":"Performant data pipelines","docid":"FastAI@dev/doc/docs/background/datapipelines.md"},{"tag":"sourcefile","title":"MLUtils/batchview.jl","docid":"MLUtils@0.4.3/src/batchview.jl"},{"tag":"document","title":"Variational autoencoders","docid":"FastAI@dev/doc/docs/notebooks/vae.ipynb"},{"tag":"sourcefile","title":"MLUtils/eachobs.jl","docid":"MLUtils@0.4.3/src/eachobs.jl"},{"tag":"sourcefile","title":"FastTabular/FastTabular.jl","docid":"FastTabular@0.1.1/src/FastTabular.jl"},{"tag":"sourcefile","title":"MLUtils/splitobs.jl","docid":"MLUtils@0.4.3/src/splitobs.jl"},{"tag":"sourcefile","title":"FastVision/recipes.jl","docid":"FastVision@0.1.1/src/recipes.jl"},{"tag":"sourcefile","title":"MLUtils/obstransform.jl","docid":"MLUtils@0.4.3/src/obstransform.jl"},{"tag":"sourcefile","title":"MLUtils/utils.jl","docid":"MLUtils@0.4.3/src/utils.jl"},{"tag":"sourcefile","title":"FastAI/tasks/taskdata.jl","docid":"FastAI@dev/src/tasks/taskdata.jl"},{"tag":"documentation","title":"filterobs","docid":"MLUtils@0.4.3/ref/MLUtils.filterobs"},{"tag":"sourcefile","title":"MLUtils/folds.jl","docid":"MLUtils@0.4.3/src/folds.jl"},{"tag":"documentation","title":"DataLoader","docid":"MLUtils@0.4.3/ref/MLUtils.DataLoader"},{"tag":"sourcefile","title":"MLUtils/randobs.jl","docid":"MLUtils@0.4.3/src/randobs.jl"}],"methods":[{"symbol_id":"MLUtils.numobs","module_id":"MLUtils","file":"observation.jl","line":52,"signature":"(::Signature)"},{"symbol_id":"MLUtils.numobs","module_id":"MLUtils","file":"observation.jl","line":53,"signature":"(::Signature)"},{"symbol_id":"MLUtils.numobs","module_id":"MLUtils","file":"observation.jl","line":156,"signature":"(::Signature)"},{"symbol_id":"MLUtils.numobs","module_id":"MLUtils","file":"observation.jl","line":153,"signature":"(::Signature)"},{"symbol_id":"MLUtils.numobs","module_id":"MLUtils","file":"observation.jl","line":193,"signature":"(::Signature)"},{"symbol_id":"MLUtils.numobs","module_id":"MLUtils","file":"observation.jl","line":215,"signature":"(::Signature)"},{"symbol_id":"MLUtils.numobs","module_id":"MLUtils","file":"SimpleTraits.jl","line":331,"signature":"(::Signature)"}],"package_id":"MLUtils@0.4.3","title":"numobs","symbol_id":"MLUtils.numobs","exported":true,"module_id":"MLUtils"},"tag":"documentation","children":[{"attributes":{"symbol":"MLUtils.numobs","line":1,"module":"MLUtils","file":"observation.jl"},"tag":"docstring","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["numobs(data)\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Return the total number of observations contained in ",{"attributes":{},"tag":"code","children":["data"],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"p","children":["If ",{"attributes":{},"tag":"code","children":["data"],"type":"node"}," does not have ",{"attributes":{},"tag":"code","children":["numobs"],"type":"node"}," defined, then in the case of ",{"attributes":{},"tag":"code","children":["Tables.table(data) == true"],"type":"node"}," returns the number of rows, otherwise returns ",{"attributes":{},"tag":"code","children":["length(data)"],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"p","children":["Authors of custom data containers should implement ",{"attributes":{},"tag":"code","children":["Base.length"],"type":"node"}," for their type instead of ",{"attributes":{},"tag":"code","children":["numobs"],"type":"node"},". ",{"attributes":{},"tag":"code","children":["numobs"],"type":"node"}," should only be implemented for types where there is a difference between ",{"attributes":{},"tag":"code","children":["numobs"],"type":"node"}," and ",{"attributes":{},"tag":"code","children":["Base.length"],"type":"node"}," (such as multi-dimensional arrays)."],"type":"node"},{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["getobs"],"type":"node"}," supports by default nested combinations of array, tuple, named tuples, and dictionaries."],"type":"node"},{"attributes":{},"tag":"p","children":["See also ",{"attributes":{"reftype":"symbol","href":"@ref","title":"","document_id":"MLUtils@0.4.3/ref/MLUtils.getobs"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["getobs"],"type":"node"}],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"h1","children":["Examples"],"type":"node"},{"attributes":{"lang":"jldoctest"},"tag":"codeblock","children":["\n# named tuples \nx = (a = [1, 2, 3], b = rand(6, 3))\nnumobs(x) == 3\n\n# dictionaries\nx = Dict(:a => [1, 2, 3], :b => rand(6, 3))\nnumobs(x) == 3\n"],"type":"node"},{"attributes":{},"tag":"p","children":["All internal containers must have the same number of observations:"],"type":"node"},{"attributes":{"lang":"juliarepl"},"tag":"codeblock","children":["julia> x = (a = [1, 2, 3, 4], b = rand(6, 3));\n\njulia> numobs(x)\nERROR: DimensionMismatch: All data containers must have the same number of observations.\nStacktrace:\n [1] _check_numobs_error()\n   @ MLUtils ~/.julia/dev/MLUtils/src/observation.jl:163\n [2] _check_numobs\n   @ ~/.julia/dev/MLUtils/src/observation.jl:130 [inlined]\n [3] numobs(data::NamedTuple{(:a, :b), Tuple{Vector{Int64}, Matrix{Float64}}})\n   @ MLUtils ~/.julia/dev/MLUtils/src/observation.jl:177\n [4] top-level scope\n   @ REPL[35]:1\n"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}