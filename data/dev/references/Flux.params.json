{"attributes":{"kind":"function","backlinks":[{"tag":"documentation","title":"ParamGroups","docid":"references/FastAI.ParamGroups"},{"tag":"sourcefile","title":"Flux/src/deprecations.jl","docid":"sourcefiles/Flux/src/deprecations.jl"},{"tag":"sourcefile","title":"FastAI/src/training/lrfind.jl","docid":"sourcefiles/FastAI/src/training/lrfind.jl"},{"tag":"documentation","title":"stateaccess","docid":"references/FluxTraining.stateaccess"},{"tag":"sourcefile","title":"FluxTraining/src/callbacks/callbacks.jl","docid":"sourcefiles/FluxTraining/src/callbacks/callbacks.jl"},{"tag":"sourcefile","title":"Flux/src/functor.jl","docid":"sourcefiles/Flux/src/functor.jl"},{"tag":"sourcefile","title":"FluxTraining/src/learner.jl","docid":"sourcefiles/FluxTraining/src/learner.jl"},{"tag":"sourcefile","title":"Flux/src/layers/show.jl","docid":"sourcefiles/Flux/src/layers/show.jl"},{"tag":"sourcefile","title":"FluxTraining/src/training.jl","docid":"sourcefiles/FluxTraining/src/training.jl"},{"tag":"sourcefile","title":"FluxTraining/src/callbacks/logging/logger.jl","docid":"sourcefiles/FluxTraining/src/callbacks/logging/logger.jl"},{"tag":"sourcefile","title":"FastAI/src/training/paramgroups.jl","docid":"sourcefiles/FastAI/src/training/paramgroups.jl"},{"tag":"documentation","title":"Descent","docid":"references/Flux.Optimise.Descent"},{"tag":"document","title":"Variational autoencoders","docid":"documents/docs/notebooks/vae.ipynb"}],"methods":[{"line":82,"file":"/home/runner/.julia/packages/Flux/KkC79/src/functor.jl","method_id":"Flux.params_1","symbol_id":"Flux.params","filedoc":"sourcefiles/Flux/src/functor.jl","signature":"params(m...)"}],"name":"params","title":"params","symbol_id":"Flux.params","public":false,"module_id":"Flux"},"tag":"documentation","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["params(model)\nparams(layers...)\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Given a model or specific layers from a model, create a ",{"attributes":{},"tag":"code","children":["Params"],"type":"node"}," object pointing to its trainable parameters."],"type":"node"},{"attributes":{},"tag":"p","children":["This can be used with the ",{"attributes":{},"tag":"code","children":["gradient"],"type":"node"}," function, see ",{"attributes":{"reftype":"document","href":"@ref","title":"","document_id":"references/@ref"},"tag":"reference","children":["Taking Gradients"],"type":"node"},", or as input to the [",{"attributes":{},"tag":"code","children":["Flux.train!"],"type":"node"},"](",{"attributes":{},"tag":"citation","children":[],"type":"node"}," Flux.train!) function."],"type":"node"},{"attributes":{},"tag":"p","children":["The behaviour of ",{"attributes":{},"tag":"code","children":["params"],"type":"node"}," on custom types can be customized using ",{"attributes":{"reftype":"document","href":"@ref","title":"","document_id":"references/@ref"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["Functor.@functor"],"type":"node"}],"type":"node"}," or ",{"attributes":{"reftype":"document","href":"@ref","title":"","document_id":"references/@ref"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["Flux.trainable"],"type":"node"}],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"h1","children":["Examples"],"type":"node"},{"attributes":{"lang":"jldoctest"},"tag":"codeblock","children":["julia> using Flux: params\n\njulia> params(Chain(Dense(ones(2,3)), softmax))  # unpacks Flux models\nParams([[1.0 1.0 1.0; 1.0 1.0 1.0], [0.0, 0.0]])\n\njulia> bn = BatchNorm(2, relu)\nBatchNorm(2, relu)  # 4 parameters, plus 4 non-trainable\n\njulia> params(bn)  # only the trainable parameters\nParams([Float32[0.0, 0.0], Float32[1.0, 1.0]])\n\njulia> params([1, 2, 3], [4])  # one or more arrays of numbers\nParams([[1, 2, 3], [4]])\n\njulia> params([[1, 2, 3], [4]])  # unpacks array of arrays\nParams([[1, 2, 3], [4]])\n\njulia> params(1, [2 2], (alpha=[3,3,3], beta=Ref(4), gamma=sin))  # ignores scalars, unpacks NamedTuples\nParams([[2 2], [3, 3, 3]])\n"],"type":"node"}],"type":"node"}],"type":"node"}