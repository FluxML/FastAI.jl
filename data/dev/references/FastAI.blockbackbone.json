{"attributes":{"kind":"function","backlinks":[{"tag":"sourcefile","title":"FastAI/src/datablock/models.jl","docid":"sourcefiles/FastAI/src/datablock/models.jl"},{"tag":"sourcefile","title":"FastAI/src/datablock/task.jl","docid":"sourcefiles/FastAI/src/datablock/task.jl"},{"tag":"sourcefile","title":"FastVision/src/models.jl","docid":"sourcefiles/FastVision/src/models.jl"},{"tag":"documentation","title":"Block","docid":"references/FastAI.Block"},{"tag":"sourcefile","title":"FastAI/src/datablock/wrappers.jl","docid":"sourcefiles/FastAI/src/datablock/wrappers.jl"},{"tag":"sourcefile","title":"FastVision/src/FastVision.jl","docid":"sourcefiles/FastVision/src/FastVision.jl"},{"tag":"sourcefile","title":"FastTabular/src/encodings/tabularpreprocessing.jl","docid":"sourcefiles/FastTabular/src/encodings/tabularpreprocessing.jl"},{"tag":"sourcefile","title":"FastTabular/src/FastTabular.jl","docid":"sourcefiles/FastTabular/src/FastTabular.jl"}],"methods":[{"line":181,"file":"/home/runner/work/FastAI.jl/FastAI.jl/src/datablock/wrappers.jl","method_id":"FastAI.blockbackbone_1","symbol_id":"FastAI.blockbackbone","filedoc":"sourcefiles/FastAI/src/datablock/wrappers.jl","signature":"blockbackbone(wrapper::FastAI.WrapperBlock)"},{"line":96,"file":"/home/runner/work/FastAI.jl/FastAI.jl/FastTabular/src/encodings/tabularpreprocessing.jl","method_id":"FastAI.blockbackbone_2","symbol_id":"FastAI.blockbackbone","filedoc":"sourcefiles/FastAI/src/encodings/tabularpreprocessing.jl","signature":"blockbackbone(inblock::FastTabular.EncodedTableRow{M, N})"},{"line":55,"file":"/home/runner/work/FastAI.jl/FastAI.jl/FastVision/src/models.jl","method_id":"FastAI.blockbackbone_3","symbol_id":"FastAI.blockbackbone","filedoc":"sourcefiles/FastAI/src/models.jl","signature":"blockbackbone(inblock::FastVision.ImageTensor{2})"}],"name":"blockbackbone","title":"blockbackbone","symbol_id":"FastAI.blockbackbone","public":false,"module_id":"FastAI"},"tag":"documentation","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["blockbackbone(inblock)\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Create a default backbone that takes in block ",{"attributes":{},"tag":"code","children":["inblock"],"type":"node"},"."],"type":"node"}],"type":"node"}],"type":"node"}