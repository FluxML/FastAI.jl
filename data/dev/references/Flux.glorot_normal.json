{"attributes":{"kind":"function","backlinks":[{"tag":"sourcefile","title":"Flux/src/utils.jl","docid":"sourcefiles/Flux/src/utils.jl"}],"methods":[{"line":138,"file":"/home/runner/.julia/packages/Flux/KkC79/src/utils.jl","method_id":"Flux.glorot_normal_1","symbol_id":"Flux.glorot_normal","filedoc":"sourcefiles/Flux/src/utils.jl","signature":"glorot_normal()"},{"line":138,"file":"/home/runner/.julia/packages/Flux/KkC79/src/utils.jl","method_id":"Flux.glorot_normal_2","symbol_id":"Flux.glorot_normal","filedoc":"sourcefiles/Flux/src/utils.jl","signature":"glorot_normal(rng::Random.AbstractRNG; init_kwargs...)"},{"line":133,"file":"/home/runner/.julia/packages/Flux/KkC79/src/utils.jl","method_id":"Flux.glorot_normal_3","symbol_id":"Flux.glorot_normal","filedoc":"sourcefiles/Flux/src/utils.jl","signature":"glorot_normal(rng::Random.AbstractRNG, dims::Integer...; gain)"},{"line":137,"file":"/home/runner/.julia/packages/Flux/KkC79/src/utils.jl","method_id":"Flux.glorot_normal_4","symbol_id":"Flux.glorot_normal","filedoc":"sourcefiles/Flux/src/utils.jl","signature":"glorot_normal(dims::Integer...; kwargs...)"}],"name":"glorot_normal","title":"glorot_normal","symbol_id":"Flux.glorot_normal","public":false,"module_id":"Flux"},"tag":"documentation","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["glorot_normal([rng=GLOBAL_RNG], size...; gain = 1) -> Array\nglorot_normal([rng]; kw...) -> Function\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Return an ",{"attributes":{},"tag":"code","children":["Array{Float32}"],"type":"node"}," of the given ",{"attributes":{},"tag":"code","children":["size"],"type":"node"}," containing random numbers drawn from a normal distribution with standard deviation ",{"attributes":{},"tag":"code","children":["gain * sqrt(2 / (fan_in + fan_out))"],"type":"node"},", using [",{"attributes":{},"tag":"code","children":["nfan"],"type":"node"},"](",{"attributes":{},"tag":"citation","children":[],"type":"node"}," Flux.nfan)."],"type":"node"},{"attributes":{},"tag":"p","children":["This method is described in [1] and also known as Xavier initialization."],"type":"node"},{"attributes":{},"tag":"h1","children":["Examples"],"type":"node"},{"attributes":{"lang":"jldoctest; setup = :(using Random; Random.seed!(0))"},"tag":"codeblock","children":["julia> using Statistics\n\njulia> round(std(Flux.glorot_normal(10, 1000)), digits=3)\n0.044f0\n\njulia> round(std(Flux.glorot_normal(1000, 10)), digits=3)\n0.044f0\n\njulia> round(std(Flux.glorot_normal(1000, 1000)), digits=3)\n0.032f0\n\njulia> Dense(10 => 1000, tanh; init = Flux.glorot_normal(gain=100))\nDense(10 => 1000, tanh)  # 11_000 parameters\n\njulia> round(std(ans.weight), sigdigits=3)\n4.45f0\n"],"type":"node"},{"attributes":{},"tag":"h1","children":["References"],"type":"node"},{"attributes":{},"tag":"p","children":["[1] Glorot, Xavier, and Yoshua Bengio. \"Understanding the difficulty of training deep feedforward neural networks.\" ",{"attributes":{},"tag":"em","children":["Proceedings of the thirteenth international conference on artificial intelligence and statistics"],"type":"node"},". 2010."],"type":"node"}],"type":"node"}],"type":"node"}