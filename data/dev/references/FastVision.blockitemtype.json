{"attributes":{"kind":"function","backlinks":[{"tag":"sourcefile","title":"FastVision/src/encodings/projective.jl","docid":"sourcefiles/FastVision/src/encodings/projective.jl"}],"methods":[{"line":132,"file":"/home/runner/work/FastAI.jl/FastAI.jl/FastVision/src/encodings/projective.jl","method_id":"FastVision.blockitemtype_1","symbol_id":"FastVision.blockitemtype","filedoc":"sourcefiles/FastVision/src/encodings/projective.jl","signature":"blockitemtype(block::Image{N}, n::Int64)"},{"line":133,"file":"/home/runner/work/FastAI.jl/FastAI.jl/FastVision/src/encodings/projective.jl","method_id":"FastVision.blockitemtype_2","symbol_id":"FastVision.blockitemtype","filedoc":"sourcefiles/FastVision/src/encodings/projective.jl","signature":"blockitemtype(block::Mask{N}, n::Int64)"},{"line":140,"file":"/home/runner/work/FastAI.jl/FastAI.jl/FastVision/src/encodings/projective.jl","method_id":"FastVision.blockitemtype_3","symbol_id":"FastVision.blockitemtype","filedoc":"sourcefiles/FastVision/src/encodings/projective.jl","signature":"blockitemtype(block::Keypoints{N}, n::Int64)"},{"line":131,"file":"/home/runner/work/FastAI.jl/FastAI.jl/FastVision/src/encodings/projective.jl","method_id":"FastVision.blockitemtype_4","symbol_id":"FastVision.blockitemtype","filedoc":"sourcefiles/FastVision/src/encodings/projective.jl","signature":"blockitemtype(block::FastAI.Block, n)"},{"line":143,"file":"/home/runner/work/FastAI.jl/FastAI.jl/FastVision/src/encodings/projective.jl","method_id":"FastVision.blockitemtype_5","symbol_id":"FastVision.blockitemtype","filedoc":"sourcefiles/FastVision/src/encodings/projective.jl","signature":"blockitemtype(block::FastAI.WrapperBlock, n::Int64)"}],"name":"blockitemtype","title":"blockitemtype","symbol_id":"FastVision.blockitemtype","public":false,"module_id":"FastVision"},"tag":"documentation","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["blockitemtype(block, N)\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Return a constructor for a ",{"attributes":{},"tag":"code","children":["DataAugmentation.Item"],"type":"node"}," that can be projected. Return ",{"attributes":{},"tag":"code","children":["nothing"],"type":"node"}," by default, indicating that ",{"attributes":{},"tag":"code","children":["block"],"type":"node"}," cannot be turned into a projectable item for bounds with dimensionality ",{"attributes":{},"tag":"code","children":["N"],"type":"node"},". For example, we have"],"type":"node"},{"attributes":{"lang":""},"tag":"codeblock","children":["blockitemtype(Image{2}(), 2) -> DataAugmentation.Image\n"],"type":"node"},{"attributes":{},"tag":"p","children":["but"],"type":"node"},{"attributes":{"lang":""},"tag":"codeblock","children":["blockitemtype(Image{3}(), 2) -> nothing\n"],"type":"node"}],"type":"node"}],"type":"node"}