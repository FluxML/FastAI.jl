{"attributes":{"kind":"function","backlinks":[{"tag":"sourcefile","title":"Flux/src/utils.jl","docid":"sourcefiles/Flux/src/utils.jl"},{"tag":"sourcefile","title":"Flux/src/layers/basic.jl","docid":"sourcefiles/Flux/src/layers/basic.jl"},{"tag":"sourcefile","title":"Flux/src/layers/conv.jl","docid":"sourcefiles/Flux/src/layers/conv.jl"}],"methods":[{"line":500,"file":"/home/runner/.julia/packages/Flux/KkC79/src/utils.jl","method_id":"Flux.create_bias_1","symbol_id":"Flux.create_bias","filedoc":"sourcefiles/Flux/src/utils.jl","signature":"create_bias(weights::AbstractArray, bias::Bool, dims::Integer...)"},{"line":503,"file":"/home/runner/.julia/packages/Flux/KkC79/src/utils.jl","method_id":"Flux.create_bias_2","symbol_id":"Flux.create_bias","filedoc":"sourcefiles/Flux/src/utils.jl","signature":"create_bias(weights::AbstractArray, bias::AbstractArray, dims::Integer...)"}],"name":"create_bias","title":"create_bias","symbol_id":"Flux.create_bias","public":false,"module_id":"Flux"},"tag":"documentation","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["create_bias(weights, bias, size...)\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Return a bias parameter for a layer, based on the value given to the constructor's keyword ",{"attributes":{},"tag":"code","children":["bias=bias"],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["bias == true"],"type":"node"}," creates a trainable array of the given size, of the same type as ",{"attributes":{},"tag":"code","children":["weights"],"type":"node"},", initialised to zero."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["bias == false"],"type":"node"}," returns ",{"attributes":{},"tag":"code","children":["false"],"type":"node"},", which is understood by AD to be non-differentiable."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["bias::AbstractArray"],"type":"node"}," uses the array provided, provided it has the correct size. It does not at present correct the ",{"attributes":{},"tag":"code","children":["eltype"],"type":"node"}," to match that of ",{"attributes":{},"tag":"code","children":["weights"],"type":"node"},"."],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}