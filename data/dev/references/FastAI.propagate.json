{"attributes":{"kind":"function","backlinks":[{"tag":"documentation","title":"PropagateNever","docid":"references/FastAI.PropagateNever"},{"tag":"sourcefile","title":"FastAI/src/datablock/wrappers.jl","docid":"sourcefiles/FastAI/src/datablock/wrappers.jl"},{"tag":"documentation","title":"PropagateSameBlock","docid":"references/FastAI.PropagateSameBlock"},{"tag":"documentation","title":"PropagateSameWrapper","docid":"references/FastAI.PropagateSameWrapper"}],"methods":[{"line":112,"file":"/home/runner/work/FastAI.jl/FastAI.jl/src/datablock/wrappers.jl","method_id":"FastAI.propagate_1","symbol_id":"FastAI.propagate","filedoc":"sourcefiles/FastAI/src/datablock/wrappers.jl","signature":"propagate(wrapper::FastAI.WrapperBlock, encoding::FastAI.Encoding)"},{"line":61,"file":"/home/runner/work/FastAI.jl/FastAI.jl/src/datablock/wrappers.jl","method_id":"FastAI.propagate_2","symbol_id":"FastAI.propagate","filedoc":"sourcefiles/FastAI/src/datablock/wrappers.jl","signature":"propagate(::FastAI.PropagateAlways, ::Any, ::Any)"},{"line":72,"file":"/home/runner/work/FastAI.jl/FastAI.jl/src/datablock/wrappers.jl","method_id":"FastAI.propagate_3","symbol_id":"FastAI.propagate","filedoc":"sourcefiles/FastAI/src/datablock/wrappers.jl","signature":"propagate(::FastAI.PropagateNever, ::Any, ::Any)"},{"line":84,"file":"/home/runner/work/FastAI.jl/FastAI.jl/src/datablock/wrappers.jl","method_id":"FastAI.propagate_4","symbol_id":"FastAI.propagate","filedoc":"sourcefiles/FastAI/src/datablock/wrappers.jl","signature":"propagate(::FastAI.PropagateSameBlock, encoding, block)"},{"line":100,"file":"/home/runner/work/FastAI.jl/FastAI.jl/src/datablock/wrappers.jl","method_id":"FastAI.propagate_5","symbol_id":"FastAI.propagate","filedoc":"sourcefiles/FastAI/src/datablock/wrappers.jl","signature":"propagate(::FastAI.PropagateSameWrapper, encoding, block)"}],"name":"propagate","title":"propagate","symbol_id":"FastAI.propagate","public":false,"module_id":"FastAI"},"tag":"documentation","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["propagate(wrapper::WrapperBlock, encoding::Encoding) -> true|false\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Whether the wrapper type should be kept after encoding the wrapped block with ",{"attributes":{},"tag":"code","children":["encoding"],"type":"node"},"."],"type":"node"}],"type":"node"}],"type":"node"}