{"attributes":{"kind":"function","backlinks":[{"tag":"sourcefile","title":"Flux/src/utils.jl","docid":"sourcefiles/Flux/src/utils.jl"}],"methods":[{"line":365,"file":"/home/runner/.julia/packages/Flux/KkC79/src/utils.jl","method_id":"Flux.sparse_init_1","symbol_id":"Flux.sparse_init","filedoc":"sourcefiles/Flux/src/utils.jl","signature":"sparse_init()"},{"line":365,"file":"/home/runner/.julia/packages/Flux/KkC79/src/utils.jl","method_id":"Flux.sparse_init_2","symbol_id":"Flux.sparse_init","filedoc":"sourcefiles/Flux/src/utils.jl","signature":"sparse_init(rng::Random.AbstractRNG; init_kwargs...)"},{"line":352,"file":"/home/runner/.julia/packages/Flux/KkC79/src/utils.jl","method_id":"Flux.sparse_init_3","symbol_id":"Flux.sparse_init","filedoc":"sourcefiles/Flux/src/utils.jl","signature":"sparse_init(rng::Random.AbstractRNG, dims::Integer...; sparsity, std)"},{"line":364,"file":"/home/runner/.julia/packages/Flux/KkC79/src/utils.jl","method_id":"Flux.sparse_init_4","symbol_id":"Flux.sparse_init","filedoc":"sourcefiles/Flux/src/utils.jl","signature":"sparse_init(dims::Integer...; kwargs...)"}],"name":"sparse_init","title":"sparse_init","symbol_id":"Flux.sparse_init","public":false,"module_id":"Flux"},"tag":"documentation","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["sparse_init([rng=GLOBAL_RNG], rows, cols; sparsity, std = 0.01) -> Array\nsparse_init([rng]; kw...) -> Function\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Return a ",{"attributes":{},"tag":"code","children":["Matrix{Float32}"],"type":"node"}," of size ",{"attributes":{},"tag":"code","children":["rows, cols"],"type":"node"}," where each column contains a fixed fraction of zero elements given by ",{"attributes":{},"tag":"code","children":["sparsity"],"type":"node"},". Non-zero elements are normally distributed with a mean of zero and standard deviation ",{"attributes":{},"tag":"code","children":["std"],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"p","children":["This method is described in [1]."],"type":"node"},{"attributes":{},"tag":"h1","children":["Examples"],"type":"node"},{"attributes":{"lang":"jldoctest; setup = :(using Random; Random.seed!(0))"},"tag":"codeblock","children":["julia> count(iszero, Flux.sparse_init(10, 10, sparsity=1/5))\n20\n\njulia> sum(0 .== Flux.sparse_init(10, 11, sparsity=0.9), dims=1)\n1×11 Matrix{Int64}:\n 9  9  9  9  9  9  9  9  9  9  9\n\njulia> Dense(3 => 10, tanh; init=Flux.sparse_init(sparsity=0.5))\nDense(3 => 10, tanh)  # 40 parameters\n\njulia> count(iszero, ans.weight, dims=1)\n1×3 Matrix{Int64}:\n 5  5  5\n"],"type":"node"},{"attributes":{},"tag":"h1","children":["References"],"type":"node"},{"attributes":{},"tag":"p","children":["[1] Martens, J, \"Deep learning via Hessian-free optimization\" ",{"attributes":{},"tag":"em","children":["Proceedings of the 27th International Conference on International Conference on Machine Learning"],"type":"node"},". 2010."],"type":"node"}],"type":"node"}],"type":"node"}