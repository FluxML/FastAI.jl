{"attributes":{"kind":"struct","backlinks":[{"tag":"sourcefile","title":"Flux/src/Flux.jl","docid":"sourcefiles/Flux/src/Flux.jl"},{"tag":"sourcefile","title":"Flux/src/layers/show.jl","docid":"sourcefiles/Flux/src/layers/show.jl"},{"tag":"sourcefile","title":"Flux/src/layers/conv.jl","docid":"sourcefiles/Flux/src/layers/conv.jl"}],"methods":[{"line":448,"file":"/home/runner/.julia/packages/Flux/KkC79/src/layers/conv.jl","method_id":"Flux.CrossCor_1","symbol_id":"Flux.CrossCor","filedoc":"sourcefiles/Flux/src/layers/conv.jl","signature":"CrossCor(k::Tuple{Vararg{Integer, N}}, ch::Pair{<:Integer, <:Integer})"},{"line":448,"file":"/home/runner/.julia/packages/Flux/KkC79/src/layers/conv.jl","method_id":"Flux.CrossCor_2","symbol_id":"Flux.CrossCor","filedoc":"sourcefiles/Flux/src/layers/conv.jl","signature":"CrossCor(k::Tuple{Vararg{Integer, N}}, ch::Pair{<:Integer, <:Integer}, σ; init, stride, pad, dilation, bias)"},{"line":439,"file":"/home/runner/.julia/packages/Flux/KkC79/src/layers/conv.jl","method_id":"Flux.CrossCor_3","symbol_id":"Flux.CrossCor","filedoc":"sourcefiles/Flux/src/layers/conv.jl","signature":"CrossCor(w::AbstractArray{T, N})"},{"line":439,"file":"/home/runner/.julia/packages/Flux/KkC79/src/layers/conv.jl","method_id":"Flux.CrossCor_4","symbol_id":"Flux.CrossCor","filedoc":"sourcefiles/Flux/src/layers/conv.jl","signature":"CrossCor(w::AbstractArray{T, N}, bias)"},{"line":439,"file":"/home/runner/.julia/packages/Flux/KkC79/src/layers/conv.jl","method_id":"Flux.CrossCor_5","symbol_id":"Flux.CrossCor","filedoc":"sourcefiles/Flux/src/layers/conv.jl","signature":"CrossCor(w::AbstractArray{T, N}, bias, σ; stride, pad, dilation)"},{"line":411,"file":"/home/runner/.julia/packages/Flux/KkC79/src/layers/conv.jl","method_id":"Flux.CrossCor_6","symbol_id":"Flux.CrossCor","filedoc":"sourcefiles/Flux/src/layers/conv.jl","signature":"CrossCor(σ::F, weight::A, bias::V, stride::Tuple{Vararg{Int64, N}}, pad::Tuple{Vararg{Int64, M}}, dilation::Tuple{Vararg{Int64, N}})"}],"name":"CrossCor","title":"CrossCor","symbol_id":"Flux.CrossCor","public":true,"module_id":"Flux"},"tag":"documentation","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["CrossCor(filter, in => out, σ=identity; stride=1, pad=0, dilation=1, [bias, init])\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Standard cross correlation layer. ",{"attributes":{},"tag":"code","children":["filter"],"type":"node"}," is a tuple of integers specifying the size of the convolutional kernel; ",{"attributes":{},"tag":"code","children":["in"],"type":"node"}," and ",{"attributes":{},"tag":"code","children":["out"],"type":"node"}," specify the number of input and output channels."],"type":"node"},{"attributes":{},"tag":"p","children":["Parameters are controlled by additional keywords, with defaults ",{"attributes":{},"tag":"code","children":["init=glorot_uniform"],"type":"node"}," and ",{"attributes":{},"tag":"code","children":["bias=true"],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"p","children":["See also ",{"attributes":{"reftype":"document","href":"@ref","title":"","document_id":"references/@ref"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["Conv"],"type":"node"}],"type":"node"}," for more detailed description of keywords."],"type":"node"},{"attributes":{},"tag":"h1","children":["Examples"],"type":"node"},{"attributes":{"lang":"jldoctest"},"tag":"codeblock","children":["julia> xs = rand(Float32, 100, 100, 3, 50);  # a batch of 50 RGB images\n\njulia> layer = CrossCor((5,5), 3 => 6, relu; bias=false)\nCrossCor((5, 5), 3 => 6, relu, bias=false)  # 450 parameters\n\njulia> layer(xs) |> size\n(96, 96, 6, 50)\n\njulia> CrossCor((5,5), 3 => 7, stride=3, pad=(2,0))(xs) |> size\n(34, 32, 7, 50)\n"],"type":"node"},{"attributes":{},"tag":"hr","children":[],"type":"node"},{"attributes":{"lang":""},"tag":"codeblock","children":["CrossCor(weight::AbstractArray, [bias, activation; stride, pad, dilation])\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Constructs a CrossCor layer with the given weight and bias. Accepts the same keywords and has the same defaults as [",{"attributes":{},"tag":"code","children":["CrossCor(k::NTuple{N,Integer}, ch::Pair{<:Integer,<:Integer}, σ; ...)"],"type":"node"},"](",{"attributes":{},"tag":"citation","children":[],"type":"node"}," CrossCor)."],"type":"node"},{"attributes":{},"tag":"h1","children":["Examples"],"type":"node"},{"attributes":{"lang":"jldoctest"},"tag":"codeblock","children":["julia> weight = rand(3, 4, 5);\n\njulia> bias = zeros(5);\n\njulia> layer = CrossCor(weight, bias, relu)\nCrossCor((3,), 4 => 5, relu)  # 65 parameters\n\njulia> layer(randn(100, 4, 64)) |> size\n(98, 5, 64)\n"],"type":"node"}],"type":"node"}],"type":"node"}