{"attributes":{"kind":"struct","backlinks":[{"tag":"documentation","title":"SamePad","docid":"Flux@0.13.11/ref/Flux.SamePad"},{"tag":"documentation","title":"AdaptiveMaxPool","docid":"Flux@0.13.11/ref/Flux.AdaptiveMaxPool"},{"tag":"documentation","title":"AdaptiveMeanPool","docid":"Flux@0.13.11/ref/Flux.AdaptiveMeanPool"},{"tag":"sourcefile","title":"Flux/layers/conv.jl","docid":"Flux@0.13.11/src/layers/conv.jl"},{"tag":"sourcefile","title":"FastVision/models/xresnet.jl","docid":"FastVision@0.1.0/src/models/xresnet.jl"},{"tag":"documentation","title":"MeanPool","docid":"Flux@0.13.11/ref/Flux.MeanPool"},{"tag":"documentation","title":"GlobalMaxPool","docid":"Flux@0.13.11/ref/Flux.GlobalMaxPool"},{"tag":"sourcefile","title":"Flux/Flux.jl","docid":"Flux@0.13.11/src/Flux.jl"}],"methods":[{"symbol_id":"Flux.MaxPool","module_id":"Flux","file":"layers/conv.jl","line":676,"signature":"(::Signature)"},{"symbol_id":"Flux.MaxPool","module_id":"Flux","file":"layers/conv.jl","line":681,"signature":"(::Signature)"}],"package_id":"Flux@0.13.11","title":"MaxPool","symbol_id":"Flux.MaxPool","exported":true,"module_id":"Flux"},"tag":"documentation","children":[{"attributes":{"symbol":"Flux.MaxPool","line":636,"module":"Flux","file":"layers/conv.jl"},"tag":"docstring","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["MaxPool(window::NTuple; pad=0, stride=window)\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Max pooling layer, which replaces all pixels in a block of size ",{"attributes":{},"tag":"code","children":["window"],"type":"node"}," with one."],"type":"node"},{"attributes":{},"tag":"p","children":["Expects as input an array with ",{"attributes":{},"tag":"code","children":["ndims(x) == N+2"],"type":"node"},", i.e. channel and batch dimensions, after the ",{"attributes":{},"tag":"code","children":["N"],"type":"node"}," feature dimensions, where ",{"attributes":{},"tag":"code","children":["N = length(window)"],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"p","children":["By default the window size is also the stride in each dimension. The keyword ",{"attributes":{},"tag":"code","children":["pad"],"type":"node"}," accepts the same options as for the ",{"attributes":{},"tag":"code","children":["Conv"],"type":"node"}," layer, including ",{"attributes":{},"tag":"code","children":["SamePad()"],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"p","children":["See also ",{"attributes":{"reftype":"symbol","href":"@ref","title":"","document_id":"Flux@0.13.11/ref/Flux.Conv"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["Conv"],"type":"node"}],"type":"node"},", ",{"attributes":{"reftype":"symbol","href":"@ref","title":"","document_id":"Flux@0.13.11/ref/Flux.MeanPool"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["MeanPool"],"type":"node"}],"type":"node"},", ",{"attributes":{"reftype":"symbol","href":"@ref","title":"","document_id":"Flux@0.13.11/ref/Flux.AdaptiveMaxPool"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["AdaptiveMaxPool"],"type":"node"}],"type":"node"},", ",{"attributes":{"reftype":"symbol","href":"@ref","title":"","document_id":"Flux@0.13.11/ref/Flux.GlobalMaxPool"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["GlobalMaxPool"],"type":"node"}],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"h1","children":["Examples"],"type":"node"},{"attributes":{"lang":"jldoctest"},"tag":"codeblock","children":["julia> xs = rand(Float32, 100, 100, 3, 50);  # batch of 50 RGB images\n\njulia> m = Chain(Conv((5, 5), 3 => 7, pad=SamePad()), MaxPool((5, 5), pad=SamePad()))\nChain(\n  Conv((5, 5), 3 => 7, pad=2),          # 532 parameters\n  MaxPool((5, 5), pad=2),\n)\n\njulia> m[1](xs) |> size\n(100, 100, 7, 50)\n\njulia> m(xs) |> size\n(20, 20, 7, 50)\n\njulia> layer = MaxPool((5,), pad=2, stride=(3,))  # one-dimensional window\nMaxPool((5,), pad=2, stride=3)\n\njulia> layer(rand(Float32, 100, 7, 50)) |> size\n(34, 7, 50)\n"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}